{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/admin/editor-adapter/collection/Layouts.js","assets/js/admin/editor-adapter/main.js","assets/js/admin/editor-adapter/model/EditorConfig.js","assets/js/admin/editor-adapter/model/EditorResources.js","assets/js/admin/editor-adapter/model/Form.js","assets/js/admin/editor-adapter/model/Layout.js","assets/js/admin/editor-adapter/model/Theme.js","assets/js/admin/editor-adapter/utils/AutoSave.js","assets/js/admin/editor-adapter/utils/SaveSnippet.js","assets/js/admin/editor-adapter/utils/TypeKitScriptsManager.js","assets/js/admin/editor-adapter/utils/autop.js","assets/js/admin/editor-adapter/utils/editor-expand/EditorExpand.js","assets/js/admin/editor-adapter/view/AddMediaButton.js","assets/js/admin/editor-adapter/view/AdminMenu.js","assets/js/admin/editor-adapter/view/EditorDefault.js","assets/js/admin/editor-adapter/view/EditorSetka.js","assets/js/admin/editor-adapter/view/HTML.js","assets/js/admin/editor-adapter/view/Page.js","assets/js/admin/editor-adapter/view/editor-tabs/EditorTabs.js","assets/js/admin/editor-adapter/view/editor-tabs/TabDefault.js","assets/js/admin/editor-adapter/view/editor-tabs/TabSetka.js","assets/js/admin/editor-adapter/view/form/Form.js","assets/js/admin/editor-adapter/view/form/Nonce.js","assets/js/admin/editor-adapter/view/form/PostId.js","assets/js/admin/editor-adapter/view/form/Settings.js","assets/js/admin/editor-adapter/view/notices/Prototype.js","assets/js/admin/editor-adapter/view/notices/SetkaEditorCantFindResources.js","assets/js/admin/editor-adapter/view/notices/SetkaEditorSaveSnippet.js","assets/js/admin/editor-adapter/view/notices/SetkaEditorThemeDisabled.js","assets/js/admin/editor-adapter/view/pointers/DisabledTabsPointer.js","assets/js/admin/editor-adapter/view/poststuff/PostStuff.js","assets/js/admin/editor-adapter/view/poststuff/post-body/PostBody.js","assets/js/admin/editor-adapter/view/screen-meta/EditorExpand.js","assets/js/admin/editor-adapter/view/scripts/TypeKitScript.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Backbone","Collection","extend","setkaEditorAdapter","window","model","Form","EditorConfig","EditorResources","Theme","Layout","collection","Themes","Layouts","view","scripts","TypeKitScript","Page","HTML","screenMeta","EditorExpand","notices","Prototype","SetkaEditorCantFindResources","SetkaEditorThemeDisabled","SetkaEditorSaveSnippet","AddMediaButton","EditorTabs","EditorTabDefault","EditorTabSetka","Editor","EditorDefault","postStuff","PostStuff","postBody","PostBody","AdminMenu","Settings","Nonce","PostId","pointers","DisabledTabsPointer","utils","editorExpand","AutoSave","autop","SaveSnippet","TypeKitScriptsManager","Model","adapter","initialize","this","_setupThemes","_setupLayouts","themes","_","each","get","element","index","list","add","set","layouts","getThemeBySlug","slug","findWhere","id","getThemeById","theme_id","getLayoutBySlug","toJSON","options","result","clone","attributes","defaults","postId","textareaId","editorInitialized","editorConfig","editorContent","useSetkaEditor","postBoxesColumns","postBoxContainer1Hovered","bindAll","isBoolean","addEvents","on","onEditorInitializedChanged","getDataForAutosave","_wpnonce","isDisabled","disabled","isUndefined","getTypeKidId","typeKit","$","jQuery","translations","setkaEditorAdapterL10n","View","DOM","setupDOM","document","names","css","onHeartBeatSend","onHeartBeatTick","save","wp","heartbeat","enqueue","event","data","wp_autosave","content","ContentEdit","Root","bind","addSnippet","snippet","theme","themeId","isEmpty","saveSnippet","trigger","ajax","url","ajaxurl","type","timeout","action","JSON","stringify","dataType","jsonp","done","response","fail","jqXHR","textStatus","errorThrown","views","onTypeKitIdChanged","isString","render","text","preserve_linebreaks","preserve_br","blocklist","replace","indexOf","b","RegExp","c","match","setTimeout","lateInit","autoOff","off","el","onEditorInitialized","hide","show","$el","body","collapseButton","isFolded","hasClass","fold","unFold","syncModel","textarea","setContent","getContent","val","class","style","onLayoutChanged","onThemeChanged","recalculateWidth","stk_editor_wrapper_2","addClass","append","html","_start","_preparePlainContent","stk_editor","afterShow","_stop","SetkaEditor","getHTML","replaceHTML","getWidth","outerWidth","setTheme","post","getTheme","getCurrentTheme","setLayout","layout","getLayout","getCurrentLayout","div","createElement","innerHTML","newContent","needWrapper","childNodes","node","nodeType","textContent","trim","wrapped","outerHTML","config","resources","start","layoutConfig","themeConfig","typeKitId","stop","newLayout","newTheme","isRequiredResourcesAvailable","themeSearch","layoutSearch","isThemeDisabled","setkaEditorEnabled","setkaEditorDisabled","removeClass","createUtils","createSubViews","switchToSetkaEditor","wp_content_wrap","autosave","typeKitScriptsManagaer","adminMenu","setkaEditorCantFindResources","setkaEditorThemeDisabled","setkaEditorSaveSnippet","form","addMediaButton","editorTabs","editorDefault","setkaEditor","disabledTabs","switchToDefaultEditor","switchEditors","go","confirm","editor","switchToSetkaEditorConfirm","muteDefaults","setInterval","saveIntoDOM","isEditorFitToSize","collapse","onPostBoxesColumns","clearInterval","unMuteDefaults","unCollapse","width","setka","createDefaultTabsViews","hideDefaults","tab","mute","unMute","events","click","classes","muted","onClick","stopImmediatePropagation","isMuted","tagName","join","tabName","preventDefault","stopPropagation","submit","settings","nonce","onSubmit","wpRefreshNonces","nonces","attr","name","statusClasses","success","warning","error","info","removeAllStatuses","value","key","setStatusSuccess","setStatusWarning","setStatusError","setStatusInfo","requiredResourcesNotAvailable","requiredResourcesAvailable","NoticePrototype","onDone","onFail","has","errors","message","alert","cantConnectToWordPress","themeDisabled","themeEnabled","onDefaultTabClick","removeEvents","disabledEditorTabs","target","pointer","collapsed","getCols","onPostBoxesColumnChange","col_1","col_2","onLaunch","onStop","async","update","getSrc","getId","head","appendChild","addEventListener","onLoad","Typekit","load"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCCAI,EAAAJ,QAAAK,SAAAC,WAAAC,sGCCA,GAAAC,KAGAC,QAAAD,mBAAAA,EAGAA,EAAAE,OAEAC,KAAAjB,EAAA,gBACAkB,aAAAlB,EAAA,wBACAmB,gBAAAnB,EAAA,2BACAoB,MAAApB,EAAA,iBACAqB,OAAArB,EAAA,mBAIAc,EAAAQ,YACAC,OAAAvB,EAAA,uBACAwB,QAAAxB,EAAA,yBAIAc,EAAAW,MAEAC,SACAC,cAAA3B,EAAA,iCAIA4B,KAAA5B,EAAA,eAEA6B,KAAA7B,EAAA,eAEA8B,YACAC,aAAA/B,EAAA,oCAGAgC,SACAC,UAAAjC,EAAA,4BAEAkC,6BAAAlC,EAAA,+CACAmC,yBAAAnC,EAAA,2CACAoC,uBAAApC,EAAA,0CAIAqC,eAAArC,EAAA,yBAGAsC,WAAAtC,EAAA,iCACAuC,iBAAAvC,EAAA,iCACAwC,eAAAxC,EAAA,+BAGAyC,OAAAzC,EAAA,sBACA0C,cAAA1C,EAAA,wBAEA2C,WACAC,UAAA5C,EAAA,8BAGA6C,UACAC,SAAA9C,EAAA,yCAKA+C,UAAA/C,EAAA,oBAGAiB,KAAAjB,EAAA,oBACAgD,SAAAhD,EAAA,wBACAiD,MAAAjD,EAAA,qBACAkD,OAAAlD,EAAA,sBAEAmD,UACAC,oBAAApD,EAAA,yCAKAc,EAAAuC,OACAC,cACAvB,aAAA/B,EAAA,uCAEAuD,SAAAvD,EAAA,oBACAwD,MAAAxD,EAAA,iBAEAyD,YAAAzD,EAAA,uBACA0D,sBAAA1D,EAAA,4gCC3FAU,EAAAJ,QAAAK,SAAAgD,MAAA9C,mCCAA,GACA+C,GAAA7C,OAAAD,kBAEAJ,GAAAJ,QAAAK,SAAAgD,MAAA9C,QAEAgD,WAAA,WACAC,KAAAC,eACAD,KAAAE,iBAGAD,aAAA,WACA,GAAAE,GAAA,GAAAL,GAAAtC,WAAAC,MAEA2C,GAAAC,KAAAL,KAAAM,IAAA,UAAA,SAAAC,EAAAC,EAAAC,GACAN,EAAAO,IAAA,GAAAZ,GAAA5C,MAAAI,MAAAiD,MAGAP,KAAAW,IAAA,SAAAR,IAGAD,cAAA,WACA,GAAAU,GAAA,GAAAd,GAAAtC,WAAAE,OAEA0C,GAAAC,KAAAL,KAAAM,IAAA,WAAA,SAAAC,EAAAC,EAAAC,GACAG,EAAAF,IAAA,GAAAZ,GAAA5C,MAAAK,OAAAgD,MAGAP,KAAAW,IAAA,UAAAC,IAGAC,eAAA,SAAAC,GACA,MAAAd,MAAAM,IAAA,UAAAS,WACAC,GAAAF,KAIAG,aAAA,SAAAD,GACA,MAAAhB,MAAAM,IAAA,UAAAS,WACAG,SAAAF,KAIAG,gBAAA,SAAAL,GACA,MAAAd,MAAAM,IAAA,WAAAS,WACAC,GAAAF,KAIAM,OAAA,SAAAC,GACA,GAAAC,GAAAlB,EAAAmB,MAAAvB,KAAAwB,WAQA,OALAF,GAAAnB,OAAAmB,EAAAnB,OAAAiB,SAGAE,EAAAV,QAAAU,EAAAV,QAAAQ,SAEAE,6BCxDA1E,EAAAJ,QAAAK,SAAAgD,MAAA9C,QAEA0E,UACAC,OAAA,KACAC,WAAA,KACAC,mBAAA,EACAC,gBACAC,cAAA,GACAC,gBAAA,EACAC,iBAAA,KAEAC,0BAAA,GAGAlC,WAAA,WAEAK,EAAA8B,QAAAlC,KAAA,6BAGA,IAAA+B,GAAA/B,KAAAM,IAAA,iBACAF,GAAA+B,UAAAJ,KACA,MAAAA,EACA/B,KAAAW,IAAA,kBAAA,GAGAX,KAAAW,IAAA,kBAAA,IAIAX,KAAAoC,aAGAA,UAAA,WACApC,KAAAqC,GAAA,2BAAArC,KAAAsC,6BAGAA,2BAAA,WACAtC,KAAAW,IAAA,iBAAAX,KAAAM,IAAA,uBAGAiC,mBAAA,WACA,OACAR,eAAA/B,KAAAM,IAAA,kBAAA,IAAA,IACAuB,aAAA7B,KAAAM,IAAA,gBAAAc,SACAoB,SAAAxC,KAAAM,IAAA,SACAoB,OAAA1B,KAAAM,IAAA,sCC7CA1D,EAAAJ,QAAAK,SAAAgD,MAAA9C,mCCAAH,EAAAJ,QAAAK,SAAAgD,MAAA9C,QAEA0F,WAAA,WACA,GAAAC,GAAA1C,KAAAM,IAAA,WAEA,QAAAF,EAAAuC,YAAA3C,KAAAM,IAAA,eAAA,IAAAoC,GAMAE,aAAA,WACA,GAAAC,GAAA7C,KAAAM,IAAA,SAMA,OAJAF,GAAAuC,YAAAE,KACAA,EAAA,IAGAA,6BCnBA,GACAC,GAAAC,OACAC,EAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAoG,OAEApD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,OAAA,kBAAA,mBACAA,KAAAoD,WACApD,KAAAoC,aAGAgB,SAAA,WACApD,KAAAmD,IAAAE,SAAAP,EAAAO,WAGAjB,UAAA,WACApC,KAAAmD,IAAAE,SACAhB,GAAA,kBAAAW,EAAAM,MAAAC,IAAAvD,KAAAwD,iBAEAxD,KAAAmD,IAAAE,SACAhB,GAAA,kBAAAW,EAAAM,MAAAC,IAAAvD,KAAAyD,kBAGAC,KAAA,WAGAzG,OAAA0G,GAAAC,UAAAC,QACAb,EAAAM,MAAAC,IACAvD,KAAA9C,MAAAqF,sBACA,IAUAiB,gBAAA,SAAAM,EAAAC,GAKA3D,EAAAuC,YAAAoB,EAAAf,EAAAM,MAAAC,OAGAnD,EAAAuC,YAAAoB,EAAA,eAEA/D,KAAA9C,MAAAoD,IAAA,uBACAyD,EAAAC,YAAAC,QAAAjE,KAAA9C,MAAAoD,IAAA,kBAEAyD,EAAAf,EAAAM,MAAAC,KAAAvD,KAAA9C,MAAAqF,uBAUAkB,gBAAA,SAAAK,EAAAC,gCCjEA,GACAjB,GAAAC,OACAC,EAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAgD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,cACAA,KAAAoC,aAGAA,UAAA,WACA8B,YAAAC,KAAA7D,MAAA8D,KAAA,cAAApE,KAAAqE,aAGAA,WAAA,SAAAC,GACA,GAAAC,GACAvE,KAAA9C,MAAAoD,IAAA,mBACAO,eAAAyD,EAAAE,QAEApE,GAAAqE,QAAAF,KACAD,EAAApD,SAAAqD,EAAAjE,IAAA,YACAN,KAAA0E,YAAAJ,KAIAI,YAAA,SAAAJ,GAEAzH,SAAA8H,QAAA,wDAAAL,EACAxB,GAAA8B,MACAC,IAAAC,QACAC,KAAA,OACAC,QAAA,IACAjB,MACAkB,OAAAjC,EAAAM,MAAAlD,EAAA,6BACA2D,KAAAmB,KAAAC,UAAAb,IAGAc,SAAA,OACAC,OAAA,IAEAC,KAAA,SAAAC,GACA1I,SAAA8H,QAAA,kDAAAL,EAAAiB,KAEAC,KAAA,SAAAC,EAAAC,EAAAC,GACA9I,SAAA8H,QAAA,kDAAAL,EAAAmB,EAAAC,EAAAC,iCC7CA,GACA7F,GAAA7C,OAAAD,kBAEAJ,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAGA6I,SAEA7F,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,sBACAA,KAAAoC,YACApC,KAAA6F,sBAGAzD,UAAA,WAEApC,KAAA9C,MAAAoD,IAAA,gBAAA+B,GAAA,mBAAArC,KAAA6F,qBAOAA,mBAAA,WACA,GAAA7E,GAAAhB,KAAA9C,MAAAoD,IAAA,gBAAAA,IAAA,YAEAF,GAAA0F,SAAA9E,IAAA,IAAAA,GAEAZ,EAAAuC,YAAA3C,KAAA4F,MAAA5E,MACAhB,KAAA4F,MAAA5E,GAAA,GAAAlB,GAAAnC,KAAAC,QAAAC,eACAX,MAAA,GAAAL,UAAAgD,OACAmB,GAAAA,MAGAhB,KAAA4F,MAAA5E,GAAA+E,sCC7BAnJ,EAAAJ,QAAA,SAAAwJ,GACA,GAAAC,IAAA,EACAC,GAAA,EACAC,EAAA,+OAOA,OAFAH,GAAAA,EAAAI,QAAA,WAAA,OAEA,IAAAJ,EAAAK,QAAA,MACAL,IAGA,IAAAA,EAAAK,QAAA,aACAL,EAAAA,EAAAI,QAAA,6BAAA,SAAAnK,GACA,MAAAA,GAAAmK,QAAA,OAAA,OAIAJ,EAAAA,EAAAI,QAAA,YAAA,SAAAnK,GACA,MAAAA,GAAAmK,QAAA,YAAA,QAIA,IAAAJ,EAAAK,QAAA,UAAA,IAAAL,EAAAK,QAAA,aACAJ,GAAA,EACAD,EAAAA,EAAAI,QAAA,qCAAA,SAAAnK,GACA,MAAAA,GAAAmK,QAAA,MAAA,uBAKA,IAAAJ,EAAAK,QAAA,cACAH,GAAA,EACAF,EAAAA,EAAAI,QAAA,kCAAA,SAAAnK,GAQA,MANAA,GAAAA,EAAAmK,QAAA,eAAA,kBAEAnK,EAAAA,EAAAmK,QAAA,YAAA,SAAAE,GACA,MAAAA,GAAAF,QAAA,WAAA,OAGAnK,EAAAmK,QAAA,YAAA,qBAIAJ,GAAA,OACAA,EAAAA,EAAAI,QAAA,sBAAA,QACAJ,EAAAA,EAAAI,QAAA,GAAAG,QAAA,QAAAJ,EAAA,iBAAA,MAAA,QACAH,EAAAA,EAAAI,QAAA,GAAAG,QAAA,SAAAJ,EAAA,MAAA,MAAA,UACAH,EAAAA,EAAAI,QAAA,kBAAA,cACAJ,EAAAA,EAAAI,QAAA,eAAA,WACAJ,EAAAA,EAAAI,QAAA,kBAAA,aACAJ,EAAAA,EAAAI,QAAA,YAAA,QACAJ,EAAAA,EAAAI,QAAA,kBAAA,eACAJ,EAAAA,EAAAI,QAAA,iBAAA,IACAJ,EAAAA,EAAAI,QAAA,GAAAG,QAAA,iBAAAJ,EAAA,yBAAA,MAAA,MACAH,EAAAA,EAAAI,QAAA,qBAAA,MACAJ,EAAAA,EAAAI,QAAA,8BAAA,qBACAJ,EAAAA,EAAAI,QAAA,2BAAA,qBACAJ,EAAAA,EAAAI,QAAA,GAAAG,QAAA,iBAAAJ,EAAA,iBAAA,MAAA,MACAH,EAAAA,EAAAI,QAAA,GAAAG,QAAA,UAAAJ,EAAA,yBAAA,MAAA,MAGAH,EAAAA,EAAAI,QAAA,qBAAA,MAGAJ,EAAAA,EAAAI,QAAA,SAAA,YAEAJ,EAAAA,EAAAI,QAAA,GAAAG,QAAA,UAAAJ,EAAA,qBAAA,MAAA,MACAH,EAAAA,EAAAI,QAAA,2DAAA,MACAJ,EAAAA,EAAAI,QAAA,+EAAA,wBAEAJ,EAAAA,EAAAI,QAAA,qDAAA,SAAAnK,EAAAqK,EAAAE,GACA,MAAAA,GAAAC,MAAA,gBACAxK,EAGAqK,EAAA,MAAAE,EAAA,SAIAP,IACAD,EAAAA,EAAAI,QAAA,mBAAA,OAGAF,IACAF,EAAAA,EAAAI,QAAA,uBAAA,WAGAJ,6BChGA,GACAlD,GAAAC,MAUAnG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAoG,OAEApD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,UAAA,YACAA,KAAAoD,WAMAsD,WAAA1G,KAAA2G,SAAA,MAGAA,SAAA,WACA3G,KAAAoC,YACApC,KAAA4G,WAGAxD,SAAA,WACApD,KAAAmD,IAAAE,SAAAP,EAAAO,WAGAjB,UAAA,WACApC,KAAA9C,MAAAmF,GAAA,2BAAArC,KAAA4G,SACA5G,KAAAmD,IAAAE,SACAhB,GAAA,mBAAArC,KAAA4G,UAGAA,QAAA,WAEA5G,KAAA9C,MAAAoD,IAAA,sBACAN,KAAA6G,OAIAA,IAAA,WACAzG,EAAAuC,YAAA,wBACA1F,OAAAuC,aAAAqH,OAGAxE,GAAA,WACAjC,EAAAuC,YAAA,wBACA1F,OAAAuC,aAAA6C,iCCtDAzF,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,uBAEA/G,WAAA,WACAC,KAAAoC,aAGAA,UAAA,WACAhC,EAAA8B,QAAAlC,KAAA,uBACAA,KAAA9C,MAAAmF,GAAA,2BAAArC,KAAA+G,sBAGAA,oBAAA,WACA/G,KAAA9C,MAAAoD,IAAA,qBACAN,KAAAgH,OAGAhH,KAAAiH,QAIAD,KAAA,WACAhH,KAAAkH,IAAAF,QAGAC,KAAA,WACAjH,KAAAkH,IAAAD,mCC5BA,GACAnE,GAAAC,MAMAnG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,aAEA3D,OAEApD,WAAA,WACAC,KAAAoD,YAGAA,SAAA,WACApD,KAAAmD,IAAAgE,KAAArE,EAAAO,SAAA8D,MACAnH,KAAAmD,IAAAiE,eAAAtE,EAAA,qBAGAuE,SAAA,WAEA,MAAArH,MAAAmD,IAAAgE,KAAAG,SAAA,WAGAC,KAAA,WACAvH,KAAAqH,YACArH,KAAAmD,IAAAiE,eACAzC,QAAA,wBAIA6C,OAAA,WACAxH,KAAAqH,YACArH,KAAAmD,IAAAiE,eACAzC,QAAA,mDCpCA/H,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAoG,OAEApD,WAAA,WAEAC,KAAAoD,WAGApD,KAAAyH,YAGArH,EAAA8B,QAAAlC,KAAA,cAGAoD,SAAA,WAEApD,KAAAmD,IAAAuE,SAAA1H,KAAA8C,EAAA,IAAA9C,KAAA9C,MAAAoD,IAAA,gBAGAyF,OAAA,WAEA,MADA/F,MAAA2H,aACA3H,MAGAiH,KAAA,WACAjH,KAAAkH,IAAAD,QAGAD,KAAA,WACAhH,KAAAkH,IAAAF,QAGAY,WAAA,WACA,MAAA5H,MAAAmD,IAAAuE,SAAAG,OAGAF,WAAA,WACA3H,KAAAmD,IAAAuE,SAAAG,IAAA7H,KAAA9C,MAAAoD,IAAA,mBAGAmH,UAAA,WACAzH,KAAA9C,MAAAyD,IAAA,gBAAAX,KAAA4H,0CC3CA,GACA9H,GAAA7C,OAAAD,mBACAgG,EAAA/F,OAAAgG,sBACAH,GAAAC,OAEAnG,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAoG,OAEA3B,WAAA,WACA,OACAR,GAAA,WAAAgC,EAAAM,MAAAC,IACAuE,MAAA9E,EAAAM,MAAAC,IAAA,WACAwE,MAAA,mBAIAhI,WAAA,WACAC,KAAAoD,WACApD,KAAAoC,aAGAgB,SAAA,WACApD,KAAAmD,IAAAE,SAAAP,EAAAO,WAGAjB,UAAA,WAGAhC,EAAA8B,QAAAlC,KAAA,kBAAA,iBAAA,mBAAA,aAGA/C,OAAAiH,YAAAC,KAAA7D,MACA8D,KAAA,cAAApE,KAAAgI,iBAGA/K,OAAAiH,YAAAC,KAAA7D,MACA8D,KAAA,aAAApE,KAAAiI,gBAEAjI,KAAAmD,IAAAE,SAAAhB,GAAA,mBAAArC,KAAAkI,mBAGAnC,OAAA,WAQA,MANA/F,MAAAmD,IAAAgF,qBACArF,EAAA,eACAsF,SAAApF,EAAAM,MAAAC,IAAA,cAEAvD,KAAAkH,IAAAmB,OAAArI,KAAAmD,IAAAgF,sBAEAnI,MAGAiH,KAAA,WAEAjH,KAAA9C,MAAAoD,IAAA,uBAGAN,KAAAmD,IAAAgF,qBAAAG,KAAA,oDAGAtI,KAAAkH,IAAAD,OAGAjH,KAAAuI,SAGAvI,KAAA9C,MAAAyD,IAAA,qBAAA,GAEAmC,EAAA,QACA6B,QAAA,UACAA,QAAA,UAGA3E,KAAA9C,MAAAyD,IAAA,gBAAAX,KAAAwI,qBAAAxI,KAAA9C,MAAAoD,IAAA,mBACAN,KAAA2H,aAGA3H,KAAAmD,IAAAsF,WAAAzI,KAAA8C,EAAA,eAEAjG,SAAA8H,QAAA,+CAIA+D,UAAA,WACA1I,KAAAkI,oBAGAlB,KAAA,WACAhH,KAAA2I,QACA3I,KAAA9C,MAAAyD,IAAA,qBAAA,GACAX,KAAAkH,IAAAF,OACAnK,SAAA8H,QAAA,4CAGAiD,WAAA,WACA,MAAAgB,aAAAC,WAGAlB,WAAA,WAEA,MADAiB,aAAAE,YAAA9I,KAAA9C,MAAAoD,IAAA,kBACAN,MAGA+I,SAAA,WAEA,MAAA/I,MAAAmD,IAAAsF,WAAAO,cAGAC,SAAA,SAAA1E,GAEA,MADAqE,aAAAM,KAAAD,SAAA1E,GACAvE,MAGAmJ,SAAA,WACA,MAAAP,aAAAQ,mBAGAC,UAAA,SAAAC,GAEA,MADAV,aAAAM,KAAAG,UAAAC,GACAtJ,MAGAuJ,UAAA,WACA,MAAAX,aAAAY,oBAYAhB,qBAAA,SAAAvE,GAEA,GAAAwF,GAAApG,SAAAqG,cAAA,MACAD,GAAAE,UAAA1F,CAKA,KAAA,GAHA2F,GAAA,GACAC,GAAA,EAEA1N,EAAA,EAAAA,EAAAsN,EAAAK,WAAApN,OAAAP,IAAA,CACA,GAAA4N,GAAAN,EAAAK,WAAA3N,EAGA,IAAA,IAAA4N,EAAAC,SAAA,CAIA,GAAA,KAAAD,EAAAE,YAAAC,OACA,QAIA,IAAAC,GAAArK,EAAAP,MAAAG,MAAAqK,EAAAE,cAIA,IAAAE,EAAA9D,QAAA,SACA8D,EAAA,MAAAA,EAAA,QAGAP,GAAAO,EACAN,GAAA,MAGA9G,QAAAgH,GAAAzC,SAAA,cACAuC,GAAA,GAEAD,GAAAG,EAAAK,UASA,MAJAP,KACAD,EAAA,yBAAAA,EAAA,UAGAA,GAGArB,OAAA,WAEA,GAAA8B,GAAArK,KAAA9C,MAAAoD,IAAA,gBAAAc,SASAkJ,EAAAtK,KAAA9C,MAAAoD,IAAA,mBAAAc,QAGAwH,aAAA2B,MAAAF,EAAAC,EAGA,IAAAE,GAAAxK,KAAAuJ,YACAkB,EAAAzK,KAAAmJ,UACAnJ,MAAA9C,MAAAoD,IAAA,gBAAAK,IAAA,SAAA6J,EAAAxJ,IACAhB,KAAA9C,MAAAoD,IAAA,gBAAAK,IAAA,QAAA8J,EAAAzJ,GACA,IAAA0J,GACA1K,KAAA9C,MAAAoD,IAAA,mBACAO,eAAA4J,EAAAzJ,IACA4B,cACA5C,MAAA9C,MAAAoD,IAAA,gBAAAK,IAAA,YAAA+J,IAGA/B,MAAA,WACAC,YAAA+B,QAGAzC,iBAAA,WACAjL,OAAAiH,YAAAC,KAAA7D,MAAAqE,QAAA,iBAGA8C,UAAA,WAEA,MADAzH,MAAA9C,MAAAyD,IAAA,gBAAAX,KAAA4H,cACA5H,MAGAgI,gBAAA,SAAA4C,GACA5K,KAAA9C,MAAAoD,IAAA,gBAAAK,IAAA,SAAAiK,IAGA3C,eAAA,SAAA4C,GACA7K,KAAA9C,MAAAoD,IAAA,gBAAAK,IAAA,QAAAkK,EAGA,IAAAtG,GAAAvE,KAAA9C,MAAAoD,IAAA,mBAAAO,eAAAgK,GAGAH,EAAAnG,EAAA3B,cAGA5C,MAAA9C,MAAAoD,IAAA,gBAAAK,IAAA,YAAA+J,IAGAI,6BAAA,WAGA,GAAAC,GACA/K,KAAA9C,MAAAoD,IAAA,mBACAO,eAAAb,KAAA9C,MAAAoD,IAAA,gBAAAA,IAAA,SAEA,IAAAF,EAAAqE,QAAAsG,GACA,OAAA,CAGA,IAAAC,GACAhL,KAAA9C,MAAAoD,IAAA,mBACAa,gBAAAnB,KAAA9C,MAAAoD,IAAA,gBAAAA,IAAA,UAEA,QAAAF,EAAAqE,QAAAuG,IAMAC,gBAAA,WACA,GAAAnK,GAAAd,KAAA9C,MAAAoD,IAAA,gBAAAA,IAAA,QAEA,OAAAN,MAAA9C,MAAAoD,IAAA,mBACAO,eAAAC,GACA2B,yCC3QA7F,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,OAEA/G,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,qBAAA,uBACAA,KAAAoC,aAGAA,UAAA,WACAvF,SAAAwF,GAAA,4CAAArC,KAAAkL,oBACArO,SAAAwF,GAAA,0CAAArC,KAAAmL,sBAGAD,mBAAA,WACAlL,KAAAkH,IAAAkB,SAAA,gBAGA+C,oBAAA,WACAnL,KAAAkH,IAAAkE,YAAA,2CCpBA,GACAtL,GAAA7C,OAAAD,mBACA8F,EAAAC,OACAC,EAAA/F,OAAAgG,sBAMArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA6I,SAEArG,SAEA4D,OAEApD,WAAA,WACAC,KAAAoD,WACApD,KAAAqL,cAGArL,KAAAsL,iBAGAlL,EAAA8B,QAAAlC,KAAA,sBAAA,wBAAA,qBAAA,eACAA,KAAAoC,YAGApC,KAAA+F,SAGA/F,KAAA9C,MAAAoD,IAAA,mBACAN,KAAAuL,uBAIAnI,SAAA,WACApD,KAAAmD,IAAAqI,gBAAA1I,EAAA,qBAGAuI,YAAA,WACArL,KAAAT,MAAAkM,SAAA,GAAA3L,GAAAP,MAAAE,UACAvC,MAAA8C,KAAA9C,QAGA8C,KAAAT,MAAAC,cACAA,aAAA,GAAAM,GAAAP,MAAAC,aAAAvB,cACAf,MAAA8C,KAAA9C,SAIA8C,KAAAT,MAAAmF,YAAA,GAAA5E,GAAAP,MAAAI,aACAzC,MAAA8C,KAAA9C,QAGA8C,KAAAT,MAAAmM,uBAAA,GAAA5L,GAAAP,MAAAK,uBACA1C,MAAA8C,KAAA9C,SAIAoO,eAAA,WAGAtL,KAAA4F,MAAA0C,KAAA,GAAAxI,GAAAnC,KAAAI,KAGAiC,KAAA4F,MAAA+F,UAAA,GAAA7L,GAAAnC,KAAAsB,UAGAe,KAAA4F,MAAA5H,YACAwB,aAAA,GAAAM,GAAAnC,KAAAK,WAAAC,cAIA+B,KAAA4F,MAAA1H,SACA0N,6BAAA,GAAA9L,GAAAnC,KAAAO,QAAAE,6BACAyN,yBAAA,GAAA/L,GAAAnC,KAAAO,QAAAG,yBACAyN,uBAAA,GAAAhM,GAAAnC,KAAAO,QAAAI,wBAGA0B,KAAA4F,MAAA/G,UAAA,GAAAiB,GAAAnC,KAAAkB,UAAAC,WACA5B,MAAA8C,KAAA9C,QAIA8C,KAAA4F,MAAAmG,KAAA,GAAAjM,GAAAnC,KAAAR,MACAD,MAAA8C,KAAA9C,QAIA8C,KAAA4F,MAAAoG,eAAA,GAAAlM,GAAAnC,KAAAY,gBACArB,MAAA8C,KAAA9C,QAIA8C,KAAA4F,MAAAqG,WAAA,GAAAnM,GAAAnC,KAAAa,YACAsI,GAAA,OAAA9G,KAAA9C,MAAAoD,IAAA,cAAA,wBACApD,MAAA8C,KAAA9C,QAIA8C,KAAA4F,MAAAsG,cAAA,GAAApM,GAAAnC,KAAAiB,eACAkI,GAAA,OAAA9G,KAAA9C,MAAAoD,IAAA,cAAA,oBACApD,MAAA8C,KAAA9C,QAIA8C,KAAA4F,MAAAuG,YAAA,GAAArM,GAAAnC,KAAAgB,QACAzB,MAAA8C,KAAA9C,QAIA8C,KAAA4F,MAAAvG,UACA+M,aAAA,GAAAtM,GAAAnC,KAAA0B,SAAAC,sBAIA8C,UAAA,WAEAvF,SAAAwF,GAAA,8CAAArC,KAAAuL,qBACA1O,SAAAwF,GAAA,gDAAArC,KAAAqM,wBAGAtG,OAAA,WAEA/F,KAAA4F,MAAAmG,KAAAhG,SAEA/F,KAAA4F,MAAAqG,WAAAlG,SAEA/F,KAAA4F,MAAAuG,YAAApG,SACA/F,KAAAmD,IAAAqI,gBACAnD,OAAArI,KAAA4F,MAAAuG,YAAAjF,MAIAqE,oBAAA,WAGA,IAAAvL,KAAA4F,MAAAuG,YAAArB,+BAEA,WADAjO,UAAA8H,QAAA,mEAGA9H,UAAA8H,QAAA,iEAIA3E,KAAA4F,MAAAuG,YAAAlB,kBACApO,SAAA8H,QAAA,oDAEA9H,SAAA8H,QAAA,mDAIAvE,EAAAuC,YAAA1F,OAAAqP,gBACArP,OAAAqP,cAAAC,GAAAvM,KAAA9C,MAAAoD,IAAA,cAAA,QAIAN,KAAA4F,MAAAsG,cAAAzE,aAGArH,EAAAqE,QAAAzE,KAAA9C,MAAAoD,IAAA,mBAEAN,KAAA9C,MAAAoD,IAAA,mBACAkM,QAAAxJ,EAAArF,KAAA8O,OAAAC,+BAOA1M,KAAAmD,IAAAqI,gBACAJ,YAAA,2BACAhD,SAAApF,EAAAM,MAAAC,IAAA,WAIAvD,KAAA4F,MAAAuG,YAAAlF,OACAjH,KAAA4F,MAAAsG,cAAAlF,OAGAhH,KAAA4F,MAAAqG,WAAAU,eAGA1P,OAAA2P,YAAA5M,KAAA6M,YAAA,MACAhQ,SAAAwF,GAAA,4BAAArC,KAAA6M,aAIA7M,KAAA8M,qBACA9M,KAAA4F,MAAA+F,UAAApE,OAGAvH,KAAA8M,qBAAA,IAAA9M,KAAA9C,MAAAoD,IAAA,qBACAN,KAAA4F,MAAA/G,UAAAkO,WAKA/M,KAAA9C,MAAAmF,GAAA,0BAAArC,KAAAgN,oBAMAhN,KAAA4F,MAAAuG,YAAAzD,cAGA2D,sBAAA,WAEArM,KAAAmD,IAAAqI,gBACAJ,YAAApI,EAAAM,MAAAC,IAAA,WACA6E,SAAA,eAGAnL,OAAAgQ,cAAAjN,KAAA6M,aACAhQ,SAAAgK,IAAA,4BAAA7G,KAAA6M,aACA7M,KAAA6M,cAGA7M,KAAA4F,MAAAsG,cAAAjF,OACAjH,KAAA4F,MAAAuG,YAAAnF,OAGAhH,KAAA4F,MAAAqG,WAAAiB,iBAIAlN,KAAA9C,MAAA2J,IAAA,0BAAA7G,KAAAgN,oBAEAhN,KAAA4F,MAAA/G,UAAAsO,cAGAL,kBAAA,WAEA,MAAA9M,MAAA4F,MAAA/G,UAAA+G,MAAA7G,SAAAmI,IAAAkG,SAAApN,KAAA4F,MAAAuG,YAAApD,YAGAiE,mBAAA,WACA,IAAAhN,KAAA9C,MAAAoD,IAAA,oBACAN,KAAA4F,MAAA/G,UAAAsO,aAEAnN,KAAA8M,qBACA9M,KAAA4F,MAAA/G,UAAAkO,WAEA/M,KAAA4F,MAAAuG,YAAAjE,oBAGA2E,YAAA,WAGA,MAFA7M,MAAA4F,MAAAuG,YAAA1E,YACAzH,KAAA4F,MAAAsG,cAAAvE,aACA3H,iCC5PA,GAEAF,IADAiD,OACA9F,OAAAD,mBAEAJ,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA6I,OACAnE,YACA4L,MAAA,MAGAtN,WAAA,WACAC,KAAAsL,kBAGAA,eAAA,WAEAlL,EAAA8B,QAAAlC,KAAA,0BAGAA,KAAA8C,EAAA,qBACAzC,KAAAL,KAAAsN,wBAGAtN,KAAA4F,MAAAyH,MAAA,GAAAvN,GAAAnC,KAAAe,gBAGA4O,uBAAA,SAAA9M,EAAAD,GACAP,KAAA4F,MAAAnE,SAAAjB,GAAA,GAAAV,GAAAnC,KAAAc,kBACAqI,GAAAvG,EACArD,MAAA8C,KAAA9C,SAIA6I,OAAA,WAOA,MALA/F,MAAA4F,MAAAyH,MAAAtH,SAGA/F,KAAAkH,IAAAmB,OAAArI,KAAA4F,MAAAyH,MAAAnG,KAEAlH,MAGAuN,aAAA,WACAnN,EAAAC,KAAAL,KAAA4F,MAAAnE,SAAA,SAAA+L,GACAA,EAAAtG,IAAAF,UAIA2F,aAAA,WACAvM,EAAAC,KAAAL,KAAA4F,MAAAnE,SAAA,SAAA+L,GACAA,EAAAC,UAIAP,eAAA,WACA9M,EAAAC,KAAAL,KAAA4F,MAAAnE,SAAA,SAAA+L,GACAA,EAAAE,uCC1DA,GACA1K,GAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA4Q,QACAC,MAAA,WAGAC,SACAC,MAAA9K,EAAAM,MAAAC,IAAA,wBAGAwK,QAAA,SAAAjK,GACA9D,KAAA9C,MAAAoD,IAAA,uBACAzD,SAAA8H,QAAA,uCAAAb,GACAA,EAAAkK,6BAcAP,KAAA,WAEA,MADAzN,MAAAkH,IAAAkB,SAAApI,KAAA6N,QAAAC,OACA9N,MAGA0N,OAAA,WAEA,MADA1N,MAAAkH,IAAAkE,YAAApL,KAAA6N,QAAAC,OACA9N,MAGAiO,QAAA,WACA,MAAAjO,MAAAkH,IAAAI,SAAAtH,KAAA6N,QAAAC,mCCzCA,GACA9K,GAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA4Q,QACAC,MAAA,WAGAM,QAAA,SAEA1M,WAAA,WAEA,GAAAqM,IACA7K,EAAAM,MAAAC,IAAA,iBACA,UAAAP,EAAAM,MAAAC,IAGA,QACAvC,GAAA,WAAAgC,EAAAM,MAAAC,IACAuE,MAAA+F,EAAAM,KAAA,OAIApI,OAAA,WAGA,MAFA/F,MAAAkH,IACAlB,KAAAhD,EAAArF,KAAA8O,OAAA2B,SACApO,MAGA+N,QAAA,SAAAjK,GACAA,EAAAuK,iBACAvK,EAAAwK,kBACAzR,SAAA8H,QAAA,2ECjCA,GACA7E,GAAA7C,OAAAD,kBAEAJ,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,QAEA6G,QACAY,OAAA,YAIA3I,SAEA7F,WAAA,WAEAC,KAAAsL,kBAGAvF,OAAA,WAIA,MAHA/F,MAAAkH,IACAmB,OAAArI,KAAA4F,MAAA4I,SAAAtH,KAEAlH,MAGAsL,eAAA,WACAtL,KAAA4F,MAAA4I,SAAA,GAAA1O,GAAAnC,KAAAuB,UACAhC,MAAA8C,KAAA9C,QAGA8C,KAAA4F,MAAA6I,MAAA,GAAA3O,GAAAnC,KAAAwB,OACAjC,MAAA8C,KAAA9C,QAGA8C,KAAA4F,MAAAlE,OAAA,GAAA5B,GAAAnC,KAAAyB,QACAlC,MAAA8C,KAAA9C,SAIAwR,SAAA,WAEA7R,SAAA8H,QAAA,6BACA3E,KAAA4F,MAAA4I,SAAAzI,qCC3CA,GACAjD,GAAAC,MAEAnG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,YAEA/G,WAAA,WACAC,KAAA9C,MAAAyD,IAAA,QAAAX,KAAAM,OACAF,EAAA8B,QAAAlC,KAAA,mBACA8C,EAAAO,UAAAhB,GAAA,mCAAArC,KAAA2O,kBAGArO,IAAA,WACA,MAAAN,MAAAkH,IAAAW,OAGA8G,gBAAA,SAAA7K,EAAAC,GACA,GAAA6K,GAAA7K,EAAA,yBACA6K,IAAAA,EAAAxI,QAAApG,KAAAkH,IAAA2H,KAAA,QACA7O,KAAA9C,MAAAyD,IAAA,QAAAiO,EAAAxI,QAAApG,KAAAkH,IAAA2H,KAAA,oCCnBAjS,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,WAEA/G,WAAA,WACAC,KAAA9C,MAAAyD,IAAA,SAAAX,KAAAM,QAGAA,IAAA,WACA,MAAAN,MAAAkH,IAAAW,kCCVA,GACA7E,GAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAmR,QAAA,QAEA1M,WAAA,WACA,OACAuD,KAAA,SACA/D,GAAAgC,EAAAM,MAAAC,IAAA,YACAuL,KAAA9L,EAAAM,MAAAC,IAAA,YACAsE,IAAA3C,KAAAC,UAAAnF,KAAA9C,MAAAqF,wBAIAwD,OAAA,WAIA,MAHA/F,MAAAkH,IAAAW,IACA3C,KAAAC,UAAAnF,KAAA9C,MAAAqF,uBAEAvC,iCCnBApD,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAgS,eACAC,QAAA,iBACAC,QAAA,iBACAC,MAAA,eACAC,KAAA,eAGAC,kBAAA,WACAhP,EAAAC,KACAL,KAAA+O,cACA,SAAAM,EAAAC,EAAA7O,GACAT,KAAAkH,IAAAkE,YAAAiE,IAEArP,OAIAuP,iBAAA,WACAvP,KAAAoP,oBACApP,KAAAkH,IAAAkB,SAAApI,KAAA+O,cAAAC,UAGAQ,iBAAA,WACAxP,KAAAoP,oBACApP,KAAAkH,IAAAkB,SAAApI,KAAA+O,cAAAE,UAGAQ,eAAA,WACAzP,KAAAoP,oBACApP,KAAAkH,IAAAkB,SAAApI,KAAA+O,cAAAG,QAGAQ,cAAA,WACA1P,KAAAoP,oBACApP,KAAAkH,IAAAkB,SAAApI,KAAA+O,cAAAI,kCCrCA,GACAnM,GAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,IAAA9D,EAAAM,MAAAC,IAAA,WAAAP,EAAAM,MAAAC,IAAA,uBAEAxD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,gCAAA,8BACAA,KAAAoC,aAGAA,UAAA,WACAvF,SAAAwF,GAAA,mEAAArC,KAAA2P,+BACA9S,SAAAwF,GAAA,gEAAArC,KAAA4P,6BAGAD,8BAAA,WACA3P,KAAAiH,QAGA2I,2BAAA,WACA5P,KAAAgH,QAGAC,KAAA,WACAjH,KAAAkH,IAAAkE,YAAA,WAGApE,KAAA,WACAhH,KAAAkH,IAAAkB,SAAA,sCC9BA,GAEAyH,IADA5S,OAAAD,mBACAd,EAAA,eAGAU,GAAAJ,QAAAqT,EAAA9S,QAIAoG,OAEApD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,SAAA,UAGAA,KAAAoC,aASAA,UAAA,WAEAvF,SAAAwF,GAAA,kDAAArC,KAAA8P,QACAjT,SAAAwF,GAAA,kDAAArC,KAAA+P,SAwBAD,OAAA,SAAAxL,EAAAiB,GAKA,GAAAnF,EAAA4P,IAAAzK,EAAA,YAAAnF,EAAAqE,QAAAc,EAAA0K,QAAA,CAGA,GAAAC,GAAA,EACA9P,GAAAC,KAAAkF,EAAA0K,OAAA,SAAA1P,EAAAC,EAAAC,GACAL,EAAAqE,QAAAyL,KACAA,GAAA,MACAA,GAAA3P,EAAA2P,UAEAjT,OAAAkT,MAAAD,KASAH,OAAA,SAAAzL,EAAAmB,EAAAC,EAAAC,GACA1I,OAAAkT,MAAAnN,aAAArF,KAAAO,QAAA4N,uBAAAsE,oEC3EA,GACApN,GAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,IAAA9D,EAAAM,MAAAC,IAAA,WAAAP,EAAAM,MAAAC,IAAA,kBAEAxD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,gBAAA,gBACAA,KAAAoC,aAGAA,UAAA,WACAvF,SAAAwF,GAAA,mDAAArC,KAAAqQ,eACAxT,SAAAwF,GAAA,kDAAArC,KAAAsQ,eAGAD,cAAA,WACArQ,KAAAiH,QAGAqJ,aAAA,WACAtQ,KAAAgH,QAGAC,KAAA,WACAjH,KAAAkH,IAAAkE,YAAA,WAGApE,KAAA,WACAhH,KAAAkH,IAAAkB,SAAA,sCC9BA,GACAtF,GAAAC,OACAC,EAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAgD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,qBACAA,KAAAoC,aAGAA,UAAA,WACAvF,SAAAwF,GAAA,uCAAArC,KAAAuQ,oBAGAC,aAAA,WACA3T,SAAAgK,IAAA,uCAAA7G,KAAAuQ,oBAGAA,kBAAA,SAAAzM,GACAhB,EAAAE,EAAA3D,SAAAoR,mBAAAC,QACAC,QAAA3N,EAAA3D,SAAAoR,mBAAApP,SACAsP,QAAA,oCCtBA,GACA7Q,GAAA7C,OAAAD,mBACAgG,EAAAC,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,aAEAlB,SAAAzC,OAEA0K,SACA+C,UAAA5N,EAAAM,MAAAC,IAAA,oCAGAxD,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,WAAA,cACAA,KAAAsL,kBAGAA,eAAA,WAEAtL,KAAA4F,MAAA7G,SAAA,GAAAe,GAAAnC,KAAAkB,UAAAE,SAAAC,UACA9B,MAAA8C,KAAA9C,SAIA6P,SAAA,WACA/M,KAAAkH,IAAAkB,SAAApI,KAAA6N,QAAA+C,WACA/T,SAAA8H,QAAA,6CAGAwI,WAAA,WACAnN,KAAAkH,IAAAkE,YAAApL,KAAA6N,QAAA+C,WACA/T,SAAA8H,QAAA,0ECjCA,GACA7B,GAAAC,MAEAnG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,aAEA3D,OAEApD,WAAA,WAEAC,KAAA9C,MAAAyD,IAAA,mBAAAX,KAAA6Q,WAEAzQ,EAAA8B,QAAAlC,KAAA,2BAEAA,KAAAoD,WACApD,KAAAoC,aAGAgB,SAAA,WACApD,KAAAmD,IAAAE,SAAAP,EAAAO,WAGAjB,UAAA,WAGApC,KAAAmD,IAAAE,SACAhB,GAAA,yBAAArC,KAAA8Q,0BAGAD,QAAA,WACA,GAAAE,GAAAC,CAIA,OAHAD,GAAA/Q,KAAAkH,IAAAI,SAAA,aACA0J,EAAAhR,KAAAkH,IAAAI,SAAA,aAEA0J,IAAAD,EAAA,EAAA,GAGAD,wBAAA,WACA9Q,KAAA9C,MAAAyD,IAAA,mBAAAX,KAAA6Q,uCCtCAjU,EAAAJ,QAAAK,SAAAqG,KAAAnG,QAEA+J,GAAA,+BAEA/G,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,WAAA,UACAA,KAAAoC,aAGAA,UAAA,WACAvF,SAAAwF,GAAA,4CAAArC,KAAAiR,UACApU,SAAAwF,GAAA,0CAAArC,KAAAkR,SAGAV,aAAA,WACA3T,SAAAgK,IAAA,4CAAA7G,KAAAiR,UACApU,SAAAgK,IAAA,0CAAA7G,KAAAkR,SAGAD,SAAA,WACAjR,KAAAgH,QAGAkK,OAAA,WACAlR,KAAAiH,QAGAD,KAAA,WACAhH,KAAAkH,IAAAF,QAGAC,KAAA,WACAjH,KAAAkH,IAAAD,mCCjCA,GACAjE,GAAA/F,OAAAgG,sBAEArG,GAAAJ,QAAAK,SAAAqG,KAAAnG,QAEAmR,QAAA,SAEA1M,YACAuD,KAAA,kBACAoM,MAAA,SAGApR,WAAA,WACAK,EAAA8B,QAAAlC,KAAA,UACAA,KAAAoC,aAGAA,UAAA,WACApC,KAAA9C,MAAAmF,GAAA,YAAArC,KAAAoR,SAGAC,OAAA,WACA,MAAA,qBAAArR,KAAA9C,MAAAoD,IAAA,MAAA,OAGAgR,MAAA,WACA,MAAAtO,GAAAM,MAAAC,IAAA,oBAAAvD,KAAA9C,MAAAoD,IAAA,OAGAyF,OAAA,WACA/F,KAAAkH,IACA2H,KAAA,KAAA7O,KAAAsR,SACAzC,KAAA,MAAA7O,KAAAqR,UAIAhO,SAAAkO,KAAAC,YAAAxR,KAAA8G,IACA9G,KAAA8G,GAAA2K,iBAAA,OAAAzR,KAAA0R,SAGAA,OAAA,WACA,IACAC,QAAAC,MACAT,OAAA,IAEA,MAAAzV","file":"editor-adapter.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nmodule.exports = Backbone.Collection.extend({\n\n});\n","/* global jQuery, tinyMCE, Backbone */\n\nvar setkaEditorAdapter = {};\n\n// Store everything globally\nwindow.setkaEditorAdapter = setkaEditorAdapter;\n\n// Models\nsetkaEditorAdapter.model = {\n\n    Form: require('./model/Form'),\n    EditorConfig: require('./model/EditorConfig'),\n    EditorResources: require('./model/EditorResources'),\n    Theme: require('./model/Theme'),\n    Layout: require('./model/Layout')\n};\n\n// Collections\nsetkaEditorAdapter.collection = {\n    Themes: require('./collection/Themes'),\n    Layouts: require('./collection/Layouts')\n};\n\n// Views\nsetkaEditorAdapter.view = {\n\n    scripts: {\n        TypeKitScript: require('./view/scripts/TypeKitScript')\n    },\n\n    // Main view ever\n    Page: require('./view/Page'),\n\n    HTML: require('./view/HTML'),\n\n    screenMeta: {\n        EditorExpand: require('./view/screen-meta/EditorExpand')\n    },\n\n    notices: {\n        Prototype: require('./view/notices/Prototype'),\n\n        SetkaEditorCantFindResources: require('./view/notices/SetkaEditorCantFindResources'),\n        SetkaEditorThemeDisabled: require('./view/notices/SetkaEditorThemeDisabled'),\n        SetkaEditorSaveSnippet: require('./view/notices/SetkaEditorSaveSnippet')\n    },\n\n    // Add Media button\n    AddMediaButton: require('./view/AddMediaButton'),\n\n    // Tabs\n    EditorTabs: require('./view/editor-tabs/EditorTabs'),\n    EditorTabDefault: require('./view/editor-tabs/TabDefault'),\n    EditorTabSetka: require('./view/editor-tabs/TabSetka'),\n\n    // Editors\n    Editor: require('./view/EditorSetka'),\n    EditorDefault: require('./view/EditorDefault'),\n\n    postStuff: {\n        PostStuff: require('./view/poststuff/PostStuff'),\n\n        // Post Body\n        postBody: {\n            PostBody: require('./view/poststuff/post-body/PostBody')\n        }\n    },\n\n    // Admin Menu\n    AdminMenu: require('./view/AdminMenu'),\n\n    // Form\n    Form: require('./view/form/Form'),\n    Settings: require('./view/form/Settings'),\n    Nonce: require('./view/form/Nonce'),\n    PostId: require('./view/form/PostId'),\n\n    pointers: {\n        DisabledTabsPointer: require('./view/pointers/DisabledTabsPointer')\n    }\n};\n\n// Utils\nsetkaEditorAdapter.utils = {\n    editorExpand: {\n        EditorExpand: require('./utils/editor-expand/EditorExpand')\n    },\n    AutoSave: require('./utils/AutoSave'),\n    autop: require('./utils/autop'),\n\n    SaveSnippet: require('./utils/SaveSnippet'),\n    TypeKitScriptsManager: require('./utils/TypeKitScriptsManager')\n};\n","module.exports = Backbone.Model.extend({\n\n});\n","var\n    adapter = window.setkaEditorAdapter;\n\nmodule.exports = Backbone.Model.extend({\n\n    initialize: function() {\n        this._setupThemes();\n        this._setupLayouts();\n    },\n\n    _setupThemes: function() {\n        var themes = new adapter.collection.Themes();\n\n        _.each(this.get('themes'), function(element, index, list) {\n            themes.add(new adapter.model.Theme(element));\n        });\n\n        this.set('themes', themes);\n    },\n\n    _setupLayouts: function() {\n        var layouts = new adapter.collection.Layouts();\n\n        _.each(this.get('layouts'), function(element, index, list) {\n            layouts.add(new adapter.model.Layout(element));\n        });\n\n        this.set('layouts', layouts);\n    },\n\n    getThemeBySlug: function(slug) {\n        return this.get('themes').findWhere({\n            id: slug\n        });\n    },\n\n    getThemeById: function(id) {\n        return this.get('themes').findWhere({\n            theme_id: id\n        });\n    },\n\n    getLayoutBySlug: function(slug) {\n        return this.get('layouts').findWhere({\n            id: slug\n        });\n    },\n\n    toJSON: function(options) {\n        var result = _.clone(this.attributes);\n\n        // themes to array\n        result.themes = result.themes.toJSON();\n\n        // layouts to array\n        result.layouts = result.layouts.toJSON();\n\n        return result;\n    }\n});\n","\nmodule.exports = Backbone.Model.extend({\n\n    defaults: {\n        postId: null,\n        textareaId: null,\n        editorInitialized: false,\n        editorConfig: {},\n        editorContent: '',\n        useSetkaEditor: false,\n        postBoxesColumns: null,\n\n        postBoxContainer1Hovered: false\n    },\n\n    initialize: function() {\n\n        _.bindAll(this, 'onEditorInitializedChanged');\n\n        // Parse useSetkaEditor\n        var useSetkaEditor = this.get('useSetkaEditor');\n        if(!_.isBoolean(useSetkaEditor)) {\n            if( useSetkaEditor === '1' ) {\n                this.set('useSetkaEditor', true);\n            }\n            else {\n                this.set('useSetkaEditor', false);\n            }\n        }\n\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        this.on('change:editorInitialized', this.onEditorInitializedChanged);\n    },\n\n    onEditorInitializedChanged: function() {\n        this.set('useSetkaEditor', this.get('editorInitialized'));\n    },\n\n    getDataForAutosave: function() {\n        return {\n            useSetkaEditor: this.get('useSetkaEditor') ? '1' : '0',\n            editorConfig: this.get('editorConfig').toJSON(),\n            _wpnonce: this.get('nonce'),\n            postId: this.get('postId')\n        };\n    }\n\n});\n","\nmodule.exports = Backbone.Model.extend({\n\n});\n","\nmodule.exports = Backbone.Model.extend({\n\n    isDisabled: function() {\n        var disabled = this.get('disabled');\n\n        if(!_.isUndefined(this.get('disabled')) && disabled === true)\n            return true;\n\n        return false;\n    },\n\n    getTypeKidId: function() {\n        var typeKit = this.get('kit_id');\n\n        if(_.isUndefined(typeKit)) {\n            typeKit = '';\n        }\n\n        return typeKit;\n    }\n\n});\n","var\n    $ = jQuery,\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    DOM: {},\n\n    initialize: function() {\n        _.bindAll(this, 'save', 'onHeartBeatSend', 'onHeartBeatTick');\n        this.setupDOM();\n        this.addEvents();\n    },\n\n    setupDOM: function() {\n        this.DOM.document = $(document);\n    },\n\n    addEvents: function() {\n        this.DOM.document\n            .on('heartbeat-send.' + translations.names.css, this.onHeartBeatSend);\n\n        this.DOM.document\n            .on('heartbeat-tick.' + translations.names.css, this.onHeartBeatTick);\n    },\n\n    save: function() {\n        // Nonce may outdated here. We need update it just before sending request\n        // and we update it on heartbeat-send event.\n        window.wp.heartbeat.enqueue(\n            translations.names.css,\n            this.model.getDataForAutosave(),\n            false\n        );\n    },\n\n    /**\n     * Before Heartbeat API sends data to server.\n     *\n     * @param event\n     * @param data\n     */\n    onHeartBeatSend: function(event, data) {\n        // Add our plugin data if WP doing auto save or some settings in editor changed\n        // (our own data already added to query and we need update it)\n        if(\n            // We replace all data for 100% actual data in request (nonce may outdated)\n            !_.isUndefined(data[translations.names.css])\n            ||\n            // if WP doing auto save also include our data\n            !_.isUndefined(data['wp_autosave'])\n        ) {\n            if(this.model.get('editorInitialized')) {\n                data.wp_autosave.content = this.model.get('editorContent');\n            }\n            data[translations.names.css] = this.model.getDataForAutosave();\n        }\n    },\n\n    /**\n     * Heartbeat get a response from server.\n     *\n     * @param event\n     * @param data\n     */\n    onHeartBeatTick: function(event, data) {\n        // Do nothing at now\n    }\n\n});\n","var\n    $ = jQuery,\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    initialize: function() {\n        _.bindAll(this, 'addSnippet');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        ContentEdit.Root.get().bind('ADD_SNIPPET', this.addSnippet);\n    },\n\n    addSnippet: function(snippet) {\n        var theme =\n            this.model.get('editorResources')\n                .getThemeBySlug(snippet.themeId);\n\n        if(!_.isEmpty(theme)) {\n            snippet.theme_id = theme.get('theme_id');\n            this.saveSnippet(snippet);\n        }\n    },\n\n    saveSnippet: function(snippet) {\n        // start saving snippet\n        Backbone.trigger('setka:editor:adapter:editors:setka:snippet:save:start', snippet);\n        var xhr = $.ajax({\n                url: ajaxurl,\n                type: 'post',\n                timeout: 30000, // throw an error if not completed after 30 sec.\n                data: {\n                    action: translations.names._ + '_save_setka_editor_snippet',\n                    data: JSON.stringify(snippet)\n                },\n                // We awaiting JSON response from WordPress\n                dataType: 'json',\n                jsonp: false\n            })\n            .done(function(response) {\n                Backbone.trigger('setka:editor:adapter:editors:setka:snippet:done', snippet, response);\n            })\n            .fail(function(jqXHR, textStatus, errorThrown) {\n                Backbone.trigger('setka:editor:adapter:editors:setka:snippet:fail', snippet, jqXHR, textStatus, errorThrown);\n            });\n    }\n\n});\n","var\n    adapter = window.setkaEditorAdapter;\n\nmodule.exports = Backbone.View.extend({\n\n    // we store here <script> tags with Type Kits\n    views: {},\n\n    initialize: function() {\n        _.bindAll(this, 'onTypeKitIdChanged');\n        this.addEvents();\n        this.onTypeKitIdChanged();\n    },\n\n    addEvents: function() {\n        // If typeKitId changed - then we need to add new Type Kit to this page.\n        this.model.get('editorConfig').on('change:typeKitId', this.onTypeKitIdChanged);\n    },\n\n    /**\n     * Trying to add new Type Kit to the page. If this Type Kit already\n     * exists on the page then we doing nothing.\n     */\n    onTypeKitIdChanged: function() {\n        var id = this.model.get('editorConfig').get('typeKitId');\n\n        if(_.isString(id) && id != '') {\n\n            if(_.isUndefined(this.views[id])) {\n                this.views[id] = new adapter.view.scripts.TypeKitScript({\n                    model: new Backbone.Model({\n                      id: id\n                    })\n                });\n                this.views[id].render();\n            }\n        }\n    }\n});\n","/**\n * Copied from wp-admin/js/editor.js\n */\n\n// Similar to `wpautop()` in formatting.php\nmodule.exports = function( text ) {\n    var preserve_linebreaks = false,\n        preserve_br = false,\n        blocklist = 'table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre' +\n            '|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section' +\n            '|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary';\n\n    // Normalize line breaks\n    text = text.replace( /\\r\\n|\\r/g, '\\n' );\n\n    if ( text.indexOf( '\\n' ) === -1 ) {\n        return text;\n    }\n\n    if ( text.indexOf( '<object' ) !== -1 ) {\n        text = text.replace( /<object[\\s\\S]+?<\\/object>/g, function( a ) {\n            return a.replace( /\\n+/g, '' );\n        });\n    }\n\n    text = text.replace( /<[^<>]+>/g, function( a ) {\n        return a.replace( /[\\n\\t ]+/g, ' ' );\n    });\n\n    // Protect pre|script tags\n    if ( text.indexOf( '<pre' ) !== -1 || text.indexOf( '<script' ) !== -1 ) {\n        preserve_linebreaks = true;\n        text = text.replace( /<(pre|script)[^>]*>[\\s\\S]*?<\\/\\1>/g, function( a ) {\n            return a.replace( /\\n/g, '<wp-line-break>' );\n        });\n    }\n\n    // keep <br> tags inside captions and convert line breaks\n    if ( text.indexOf( '[caption' ) !== -1 ) {\n        preserve_br = true;\n        text = text.replace( /\\[caption[\\s\\S]+?\\[\\/caption\\]/g, function( a ) {\n            // keep existing <br>\n            a = a.replace( /<br([^>]*)>/g, '<wp-temp-br$1>' );\n            // no line breaks inside HTML tags\n            a = a.replace( /<[^<>]+>/g, function( b ) {\n                return b.replace( /[\\n\\t ]+/, ' ' );\n            });\n            // convert remaining line breaks to <br>\n            return a.replace( /\\s*\\n\\s*/g, '<wp-temp-br />' );\n        });\n    }\n\n    text = text + '\\n\\n';\n    text = text.replace( /<br \\/>\\s*<br \\/>/gi, '\\n\\n' );\n    text = text.replace( new RegExp( '(<(?:' + blocklist + ')(?: [^>]*)?>)', 'gi' ), '\\n$1' );\n    text = text.replace( new RegExp( '(</(?:' + blocklist + ')>)', 'gi' ), '$1\\n\\n' );\n    text = text.replace( /<hr( [^>]*)?>/gi, '<hr$1>\\n\\n' ); // hr is self closing block element\n    text = text.replace( /\\s*<option/gi, '<option' ); // No <p> or <br> around <option>\n    text = text.replace( /<\\/option>\\s*/gi, '</option>' );\n    text = text.replace( /\\n\\s*\\n+/g, '\\n\\n' );\n    text = text.replace( /([\\s\\S]+?)\\n\\n/g, '<p>$1</p>\\n' );\n    text = text.replace( /<p>\\s*?<\\/p>/gi, '');\n    text = text.replace( new RegExp( '<p>\\\\s*(</?(?:' + blocklist + ')(?: [^>]*)?>)\\\\s*</p>', 'gi' ), '$1' );\n    text = text.replace( /<p>(<li.+?)<\\/p>/gi, '$1');\n    text = text.replace( /<p>\\s*<blockquote([^>]*)>/gi, '<blockquote$1><p>');\n    text = text.replace( /<\\/blockquote>\\s*<\\/p>/gi, '</p></blockquote>');\n    text = text.replace( new RegExp( '<p>\\\\s*(</?(?:' + blocklist + ')(?: [^>]*)?>)', 'gi' ), '$1' );\n    text = text.replace( new RegExp( '(</?(?:' + blocklist + ')(?: [^>]*)?>)\\\\s*</p>', 'gi' ), '$1' );\n\n    // Remove redundant spaces and line breaks after existing <br /> tags\n    text = text.replace( /(<br[^>]*>)\\s*\\n/gi, '$1' );\n\n    // Create <br /> from the remaining line breaks\n    text = text.replace( /\\s*\\n/g, '<br />\\n');\n\n    text = text.replace( new RegExp( '(</?(?:' + blocklist + ')[^>]*>)\\\\s*<br />', 'gi' ), '$1' );\n    text = text.replace( /<br \\/>(\\s*<\\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)>)/gi, '$1' );\n    text = text.replace( /(?:<p>|<br ?\\/?>)*\\s*\\[caption([^\\[]+)\\[\\/caption\\]\\s*(?:<\\/p>|<br ?\\/?>)*/gi, '[caption$1[/caption]' );\n\n    text = text.replace( /(<(?:div|th|td|form|fieldset|dd)[^>]*>)(.*?)<\\/p>/g, function( a, b, c ) {\n        if ( c.match( /<p( [^>]*)?>/ ) ) {\n            return a;\n        }\n\n        return b + '<p>' + c + '</p>';\n    });\n\n    // put back the line breaks in pre|script\n    if ( preserve_linebreaks ) {\n        text = text.replace( /<wp-line-break>/g, '\\n' );\n    }\n\n    if ( preserve_br ) {\n        text = text.replace( /<wp-temp-br([^>]*)>/g, '<br$1>' );\n    }\n\n    return text;\n};\n","var\n    $ = jQuery;\n\n/**\n * For more details checkout\n * /wp-admin/js/editor-expand.js:710 (editor expand section) and read description bellow.\n *\n * This util (ok, actually view) unfortunately can't prevent auto init of editorExpand and adjust() method\n * called on page loading. We are only disable this after the page is fully loaded and if\n * user switched to Setka Editor.\n */\nmodule.exports = Backbone.View.extend({\n\n    DOM: {},\n\n    initialize: function() {\n        _.bindAll(this, 'autoOff', 'lateInit');\n        this.setupDOM();\n\n        // After 3 sec on DOM ready\n        // We play dirty because of editorExpand init\n        // checkout wp-admin/js/editor-expand.js:710.\n        // There adjust() method calling each 500ms for 6 times.\n        setTimeout(this.lateInit, 3000);\n    },\n\n    lateInit: function() {\n        this.addEvents();\n        this.autoOff();\n    },\n\n    setupDOM: function() {\n        this.DOM.document = $(document);\n    },\n\n    addEvents: function() {\n        this.model.on('change:editorInitialized', this.autoOff);\n        this.DOM.document\n            .on('editor-expand-on', this.autoOff);\n    },\n\n    autoOff: function() {\n        // if Setka Editor already running\n        if(this.model.get('editorInitialized')) {\n            this.off();\n        }\n    },\n\n    off: function() {\n        if(!_.isUndefined('window.editorExpand'))\n            window.editorExpand.off();\n    },\n\n    on: function() {\n        if(!_.isUndefined('window.editorExpand'))\n            window.editorExpand.on();\n    }\n\n});\n","\nmodule.exports = Backbone.View.extend({\n\n    el: '#insert-media-button',\n\n    initialize: function() {\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        _.bindAll(this, 'onEditorInitialized');\n        this.model.on('change:editorInitialized', this.onEditorInitialized);\n    },\n\n    onEditorInitialized: function() {\n        if(this.model.get('editorInitialized')) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    },\n\n    hide: function() {\n        this.$el.hide();\n    },\n\n    show: function() {\n        this.$el.show();\n    }\n});\n","var\n    $ = jQuery;\n\n/**\n * WordPress Admin Menu (left col on page). With this view\n * we can fold (collapse) this menu or unfold.\n */\nmodule.exports = Backbone.View.extend({\n\n    el: '#adminmenu',\n\n    DOM: {},\n\n    initialize: function() {\n        this.setupDOM();\n    },\n\n    setupDOM: function() {\n        this.DOM.body = $(document.body);\n        this.DOM.collapseButton = $('#collapse-button');\n    },\n\n    isFolded: function() {\n        // If not folded then we can fold it (collapse).\n        return this.DOM.body.hasClass('folded');\n    },\n\n    fold: function() {\n        if(!this.isFolded()) {\n            this.DOM.collapseButton\n                .trigger('click.collapse-menu');\n        }\n    },\n\n    unFold: function() {\n        if(this.isFolded()) {\n            this.DOM.collapseButton\n                .trigger('click.collapse-menu');\n        }\n    }\n\n});\n","\nmodule.exports = Backbone.View.extend({\n\n    DOM: {},\n\n    initialize: function() {\n        // Helper elements\n        this.setupDOM();\n\n        // Load content inside model\n        this.syncModel();\n\n        // Set correct context (this) for sync()\n        _.bindAll(this, 'syncModel');\n    },\n\n    setupDOM: function() {\n        // Textarea (<textarea>)\n        this.DOM.textarea = this.$('#' + this.model.get('textareaId'));\n    },\n\n    render: function() {\n        this.setContent();\n        return this;\n    },\n\n    show: function() {\n        this.$el.show();\n    },\n\n    hide: function() {\n        this.$el.hide();\n    },\n\n    getContent: function() {\n        return this.DOM.textarea.val();\n    },\n\n    setContent: function() {\n        this.DOM.textarea.val(this.model.get('editorContent'));\n    },\n\n    syncModel: function() {\n        this.model.set('editorContent', this.getContent());\n    }\n\n});\n","var\n    adapter = window.setkaEditorAdapter,\n    translations = window.setkaEditorAdapterL10n;\n    $ = jQuery;\n\nmodule.exports = Backbone.View.extend({\n\n    DOM: {},\n\n    attributes: function() {\n        return {\n            id: 'content-' + translations.names.css,\n            class: translations.names.css + '-wrapper',\n            style: 'display: none;'\n        };\n    },\n\n    initialize: function() {\n        this.setupDOM();\n        this.addEvents();\n    },\n\n    setupDOM: function() {\n        this.DOM.document = $(document);\n    },\n\n    addEvents: function() {\n\n        // Set correct context (this) for onLayoutChanged(), onThemeChanged()\n        _.bindAll(this, 'onLayoutChanged', 'onThemeChanged', 'recalculateWidth', 'syncModel');\n\n        // Editor layout changed\n        window.ContentEdit.Root.get()\n            .bind('post:layout', this.onLayoutChanged);\n\n        // Editor theme changed\n        window.ContentEdit.Root.get()\n            .bind('post:theme', this.onThemeChanged);\n\n        this.DOM.document.on('wp-collapse-menu', this.recalculateWidth);\n    },\n\n    render: function() {\n\n        this.DOM.stk_editor_wrapper_2 =\n            $('<div></div>')\n                .addClass(translations.names.css + '-wrapper-2');\n\n        this.$el.append(this.DOM.stk_editor_wrapper_2);\n\n        return this;\n    },\n\n    show: function() {\n        // If already initialized do nothing\n        if( !this.model.get('editorInitialized') ) {\n\n            // Create brand new editor container\n            this.DOM.stk_editor_wrapper_2.html('<div id=\"setka-editor\" class=\"stk-editor\"></div>');\n\n            // Show editor container\n            this.$el.show();\n\n            // Editor starter\n            this._start();\n\n            // Set editorInitialized flag to true\n            this.model.set('editorInitialized', true);\n\n            $('body')\n                .trigger('resize')\n                .trigger('scroll');\n\n            // Insert content\n            this.model.set('editorContent', this._preparePlainContent(this.model.get('editorContent')));\n            this.setContent();\n\n            // Find DOM elements which used in some functions of this view\n            this.DOM.stk_editor = this.$('.stk-editor');\n\n            Backbone.trigger('setka:editor:adapter:editors:setka:launch');\n        }\n    },\n\n    afterShow: function() {\n        this.recalculateWidth();\n    },\n\n    hide: function() {\n        this._stop();\n        this.model.set('editorInitialized', false);\n        this.$el.hide();\n        Backbone.trigger('setka:editor:adapter:editors:setka:stop');\n    },\n\n    getContent: function() {\n        return SetkaEditor.getHTML();\n    },\n\n    setContent: function() {\n        SetkaEditor.replaceHTML(this.model.get('editorContent'));\n        return this;\n    },\n\n    getWidth: function() {\n        // width + paddings\n        return this.DOM.stk_editor.outerWidth();\n    },\n\n    setTheme: function(theme) {\n        SetkaEditor.post.setTheme(theme);\n        return this;\n    },\n\n    getTheme: function() {\n        return SetkaEditor.getCurrentTheme();\n    },\n\n    setLayout: function(layout) {\n        SetkaEditor.post.setLayout(layout);\n        return this;\n    },\n\n    getLayout: function() {\n        return SetkaEditor.getCurrentLayout();\n    },\n\n    /**\n     * Parse content from WordPress textarea before inserting in our editor. Wrap plain text inside paragraphs (<p>).\n     * If content not looks like plain text do nothing at now. This logic may have issues with parsing content but\n     * it's ok. As last part of this method content puts inside the div with `stk-post` class.\n     *\n     * @param content string\n     * @returns string\n     * @private\n     */\n    _preparePlainContent: function(content) {\n\n        var div = document.createElement('div');\n        div.innerHTML = content;\n\n        var newContent = '';\n        var needWrapper = false;\n\n        for(var i = 0; i < div.childNodes.length; i++) {\n            var node = div.childNodes[i];\n\n            // 3 means TEXT_NODE (plain text)\n            if(node.nodeType === 3) {\n\n                // The node must contain something.\n                // Nodes with only spaces, line breaks and tabs will be skipped\n                if(node.textContent.trim() === '') {\n                    continue;\n                }\n\n                // Prepare content with autop()\n                var wrapped = adapter.utils.autop(node.textContent);\n\n                // If one line of text (without any \\n symbols) autop() do nothing.\n                // We manually wrap it in <p>.\n                if(wrapped.indexOf('<p>') === -1) {\n                    wrapped = '<p>' + wrapped + '</p>';\n                }\n\n                newContent += wrapped;\n                needWrapper = true;\n            }\n            else {\n                if( ! jQuery(node).hasClass('stk-post') ) {\n                    needWrapper = true;\n                }\n                newContent += node.outerHTML;\n            }\n        }\n\n        // Add wrapper if not founded\n        if( needWrapper ) {\n            newContent = '<div class=\"stk-post\">' + newContent + '</div>';\n        }\n\n        return newContent;\n    },\n\n    _start: function() {\n\n        var config = this.model.get('editorConfig').toJSON();\n\n        /*var resources = {\n            'layouts': window.resources.layouts,\n            'themes': window.resources.themes,\n            'images': [],\n            'symbols': window.resources.symbols\n        };*/\n\n        var resources = this.model.get('editorResources').toJSON();\n\n        // Start editor\n        SetkaEditor.start(config, resources);\n\n        // Just sure what editor settings up-to-date in Backbone Model\n        var layoutConfig = this.getLayout();\n        var themeConfig = this.getTheme();\n        this.model.get('editorConfig').set('layout', layoutConfig.id);\n        this.model.get('editorConfig').set('theme', themeConfig.id);\n        var typeKitId =\n            this.model.get('editorResources')\n                .getThemeBySlug(themeConfig.id)\n                    .getTypeKidId();\n        this.model.get('editorConfig').set('typeKitId', typeKitId);\n    },\n\n    _stop: function() {\n        SetkaEditor.stop();\n    },\n\n    recalculateWidth: function() {\n        window.ContentEdit.Root.get().trigger('editor:width');\n    },\n\n    syncModel: function() {\n        this.model.set('editorContent', this.getContent());\n        return this;\n    },\n\n    onLayoutChanged: function(newLayout) {\n        this.model.get('editorConfig').set('layout', newLayout);\n    },\n\n    onThemeChanged: function(newTheme) {\n        this.model.get('editorConfig').set('theme', newTheme);\n\n        // Find selected theme\n        var theme = this.model.get('editorResources').getThemeBySlug(newTheme);\n\n        // Check for theme TypeKit\n        var typeKitId = theme.getTypeKidId();\n\n        // Update TypeKit\n        this.model.get('editorConfig').set('typeKitId', typeKitId);\n    },\n\n    isRequiredResourcesAvailable: function() {\n\n        // Theme\n        var themeSearch =\n            this.model.get('editorResources')\n                .getThemeBySlug(this.model.get('editorConfig').get('theme'));\n\n        if(_.isEmpty(themeSearch))\n            return false;\n\n        // Layout\n        var layoutSearch =\n            this.model.get('editorResources')\n                . getLayoutBySlug(this.model.get('editorConfig').get('layout'));\n\n        if(_.isEmpty(layoutSearch))\n            return false;\n\n        return true;\n    },\n\n    isThemeDisabled: function() {\n        var slug = this.model.get('editorConfig').get('theme');\n\n        return this.model.get('editorResources')\n            .getThemeBySlug(slug)\n                .isDisabled();\n    }\n});\n","\nmodule.exports = Backbone.View.extend({\n\n    el: 'html',\n\n    initialize: function() {\n        _.bindAll(this, 'setkaEditorEnabled', 'setkaEditorDisabled');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        Backbone.on('setka:editor:adapter:editors:setka:launch', this.setkaEditorEnabled);\n        Backbone.on('setka:editor:adapter:editors:setka:stop',   this.setkaEditorDisabled);\n    },\n\n    setkaEditorEnabled: function() {\n        this.$el.addClass('wpstkeditor');\n    },\n\n    setkaEditorDisabled: function() {\n        this.$el.removeClass('wpstkeditor');\n    }\n\n});\n","var\n    adapter = window.setkaEditorAdapter,\n    $ = jQuery,\n    translations = window.setkaEditorAdapterL10n;\n\n/**\n * Page which may have Admin Menu, Sidebar (Side Sortables WordPress Meta boxes),\n * Editor and other things.\n */\nmodule.exports = Backbone.View.extend({\n\n    views: {},\n\n    utils: {},\n\n    DOM: {},\n\n    initialize: function() {\n        this.setupDOM();\n        this.createUtils();\n\n        // Init children views\n        this.createSubViews();\n\n        // Events\n        _.bindAll(this, 'switchToSetkaEditor', 'switchToDefaultEditor', 'onPostBoxesColumns', 'saveIntoDOM');\n        this.addEvents();\n\n        // Render\n        this.render();\n\n        // Auto init editor if post created with this editor\n        if(this.model.get('useSetkaEditor')) {\n            this.switchToSetkaEditor();\n        }\n    },\n\n    setupDOM: function() {\n        this.DOM.wp_content_wrap = $('#wp-content-wrap');\n    },\n\n    createUtils: function() {\n        this.utils.autosave = new adapter.utils.AutoSave({\n            model: this.model\n        });\n\n        this.utils.editorExpand = {\n            editorExpand: new adapter.utils.editorExpand.EditorExpand({\n                model: this.model\n            })\n        };\n\n        this.utils.saveSnippet = new adapter.utils.SaveSnippet({\n            model: this.model\n        });\n\n        this.utils.typeKitScriptsManagaer = new adapter.utils.TypeKitScriptsManager({\n            model: this.model\n        });\n    },\n\n    createSubViews: function() {\n\n        // HTML\n        this.views.html = new adapter.view.HTML();\n\n        // WordPress Admin Menu (dark left vertical side)\n        this.views.adminMenu = new adapter.view.AdminMenu();\n\n        // Screen Options (#screen-meta)\n        this.views.screenMeta = {\n            editorExpand: new adapter.view.screenMeta.EditorExpand()\n        };\n\n        // Notices\n        this.views.notices = {\n            setkaEditorCantFindResources: new adapter.view.notices.SetkaEditorCantFindResources(),\n            setkaEditorThemeDisabled:     new adapter.view.notices.SetkaEditorThemeDisabled(),\n            setkaEditorSaveSnippet:       new adapter.view.notices.SetkaEditorSaveSnippet()\n        };\n\n        this.views.postStuff = new adapter.view.postStuff.PostStuff({\n            model: this.model\n        });\n\n        // Main form on post.php pages\n        this.views.form = new adapter.view.Form({\n            model: this.model\n        });\n\n        // Add Media button\n        this.views.addMediaButton = new adapter.view.AddMediaButton({\n            model: this.model\n        });\n\n        // Editors tabs (Visual, Text,..)\n        this.views.editorTabs = new adapter.view.EditorTabs({\n            el: '#wp-' + this.model.get('textareaId') + '-wrap .wp-editor-tabs',\n            model: this.model\n        });\n\n        // Default editor (textarea)\n        this.views.editorDefault = new adapter.view.EditorDefault({\n            el: '#wp-' + this.model.get('textareaId') + '-editor-container',\n            model: this.model\n        });\n\n        // Grid editor\n        this.views.setkaEditor = new adapter.view.Editor({\n            model: this.model\n        });\n\n        // Pointers\n        this.views.pointers = {\n          disabledTabs: new adapter.view.pointers.DisabledTabsPointer()\n        };\n    },\n\n    addEvents: function() {\n        // Tabs clicks (switching editors)\n        Backbone.on('setka:editor:adapter:editorTabs:setka:click', this.switchToSetkaEditor);\n        Backbone.on('setka:editor:adapter:editorTabs:default:click', this.switchToDefaultEditor);\n    },\n\n    render: function() {\n\n        this.views.form.render();\n\n        this.views.editorTabs.render();\n\n        this.views.setkaEditor.render();\n        this.DOM.wp_content_wrap\n            .append(this.views.setkaEditor.$el);\n    },\n\n\n    switchToSetkaEditor: function() {\n\n        // Check for required resources\n        if( !this.views.setkaEditor.isRequiredResourcesAvailable() ) {\n            Backbone.trigger('setka:editor:adapter:editors:setka:requiredResourcesNotAvailable');\n            return;\n        } else {\n            Backbone.trigger('setka:editor:adapter:editors:setka:requiredResourcesAvailable');\n        }\n\n        // Theme disabled notice\n        if( this.views.setkaEditor.isThemeDisabled() ) {\n            Backbone.trigger('setka:editor:adapter:editors:setka:themeDisabled');\n        } else {\n            Backbone.trigger('setka:editor:adapter:editors:setka:themeEnabled');\n        }\n\n        // Switch to HTML editor if TinyMCE is available\n        if(!_.isUndefined(window.switchEditors)) {\n            window.switchEditors.go(this.model.get('textareaId'), 'html');\n        }\n\n        // Update content in model (textarea -> model)\n        this.views.editorDefault.syncModel();\n\n        // Show confirm window and switch only if user click OK\n        if(!_.isEmpty(this.model.get('editorContent'))\n            // Only for NOT Setka Editor posts\n            && !this.model.get('useSetkaEditor')\n            && !confirm(translations.view.editor.switchToSetkaEditorConfirm))\n            return;\n\n\n        // Start the editor\n\n        // Toggle wrapper classes\n        this.DOM.wp_content_wrap\n            .removeClass('html-active tmce-active')\n            .addClass(translations.names.css + '-active');\n\n\n        // Switch editors\n        this.views.setkaEditor.show();\n        this.views.editorDefault.hide();\n\n        // Mute default editor tabs\n        this.views.editorTabs.muteDefaults();\n\n        // Start sync content\n        window.setInterval(this.saveIntoDOM, 15000);\n        Backbone.on('setka:editor:adapter:save', this.saveIntoDOM);\n\n        // Try to encrease horizontal space (width) for editor\n        // by collapsing (folding) admin menu\n        if( ! this.isEditorFitToSize() ) {\n            this.views.adminMenu.fold();\n        }\n        // by collapsing right meta boxes\n        if( ! this.isEditorFitToSize() && this.model.get('postBoxesColumns') === 2 ) {\n            this.views.postStuff.collapse();\n        }\n\n        // WordPress can change the number of cols and we need\n        // adopt to this changes.\n        this.model.on('change:postBoxesColumns', this.onPostBoxesColumns);\n\n        /**\n         * After increasing horizontal space (width) in the code above\n         * editor need to be updated.\n         */\n        this.views.setkaEditor.afterShow();\n    },\n\n    switchToDefaultEditor: function() {\n        // Toggle wrapper classes\n        this.DOM.wp_content_wrap\n            .removeClass(translations.names.css + '-active')\n            .addClass('html-active');\n\n        // Remove event and make finally save before disabling editor\n        window.clearInterval(this.saveIntoDOM);\n        Backbone.off('setka:editor:adapter:save', this.saveIntoDOM);\n        this.saveIntoDOM();\n\n        // Switch editors\n        this.views.editorDefault.show();\n        this.views.setkaEditor.hide();\n\n        // Unmute default editor tabs\n        this.views.editorTabs.unMuteDefaults();\n\n        // WordPress can change the number of cols and we need\n        // adopt to this changes.\n        this.model.off('change:postBoxesColumns', this.onPostBoxesColumns);\n\n        this.views.postStuff.unCollapse();\n    },\n\n    isEditorFitToSize: function() {\n        // Container must be great (or equal) than editor\n        return (this.views.postStuff.views.postBody.$el.width() >= this.views.setkaEditor.getWidth());\n    },\n\n    onPostBoxesColumns: function () {\n        if(this.model.get('postBoxesColumns') === 1) {\n            this.views.postStuff.unCollapse();\n        }\n        else if(!this.isEditorFitToSize()) {\n            this.views.postStuff.collapse();\n        }\n        this.views.setkaEditor.recalculateWidth();\n    },\n\n    saveIntoDOM: function() {\n        this.views.setkaEditor.syncModel();\n        this.views.editorDefault.setContent();\n        return this;\n    }\n\n});\n","var\n    $ = jQuery,\n    adapter = window.setkaEditorAdapter;\n\nmodule.exports = Backbone.View.extend({\n\n    views: {\n        defaults: {},\n        setka: null\n    },\n\n    initialize: function() {\n        this.createSubViews();\n    },\n\n    createSubViews: function() {\n\n        _.bindAll(this, 'createDefaultTabsViews');\n\n        // Setup default tabs views\n        this.$('.wp-switch-editor')\n            .each(this.createDefaultTabsViews);\n\n        // Setup setka tab view\n        this.views.setka = new adapter.view.EditorTabSetka();\n    },\n\n    createDefaultTabsViews: function(index, element) {\n        this.views.defaults[index] = new adapter.view.EditorTabDefault({\n            el: element,\n            model: this.model\n        });\n    },\n\n    render: function() {\n        // Render subviews\n        this.views.setka.render();\n\n        // Append tabs to container\n        this.$el.append(this.views.setka.$el);\n\n        return this;\n    },\n\n    hideDefaults: function() {\n        _.each(this.views.defaults, function(tab){\n            tab.$el.hide();\n        });\n    },\n\n    muteDefaults: function() {\n        _.each(this.views.defaults, function(tab){\n            tab.mute();\n        });\n    },\n\n    unMuteDefaults: function() {\n        _.each(this.views.defaults, function(tab){\n            tab.unMute();\n        });\n    }\n});\n","var\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    events: {\n        click: 'onClick'\n    },\n\n    classes: {\n        muted: translations.names.css + '-switch-editor-muted'\n    },\n\n    onClick: function(event) {\n        if( this.model.get('editorInitialized') ) {\n            Backbone.trigger('setka:editor:adapter:defaultTabClick', event);\n            event.stopImmediatePropagation();\n\n            // This part of code can add confirm window and only if user click \"ok\" then switch to default editor.\n\n            /*if (confirm(translations.view.editor.switchToDefaultEditorsConfirm)) {\n                Backbone.trigger('setka:editor:adapter:editorTabs:default:click');\n            }\n            else {\n                // Keeps the rest of the handlers from being executed\n                event.stopImmediatePropagation();\n            }*/\n        }\n    },\n\n    mute: function() {\n        this.$el.addClass(this.classes.muted);\n        return this;\n    },\n\n    unMute: function() {\n        this.$el.removeClass(this.classes.muted);\n        return this;\n    },\n\n    isMuted: function() {\n        return this.$el.hasClass(this.classes.muted);\n    }\n});\n","var\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    events: {\n        click: 'onClick'\n    },\n\n    tagName: 'button',\n\n    attributes: function() {\n\n        var classes = [\n            translations.names.css + '-switch-editor',\n            'switch-' + translations.names.css\n        ];\n\n        return {\n            id: 'content-' + translations.names.css,\n            class: classes.join(' ')\n        };\n    },\n\n    render: function() {\n        this.$el\n            .text(translations.view.editor.tabName);\n        return this;\n    },\n\n    onClick: function(event) {\n        event.preventDefault();\n        event.stopPropagation(); // to prevent triggering `click` outside of editor and blurring as side-effect\n        Backbone.trigger('setka:editor:adapter:editorTabs:setka:click');\n    }\n});\n","var\n    adapter = window.setkaEditorAdapter;\n\nmodule.exports = Backbone.View.extend({\n\n    el: '#post',\n\n    events: {\n        submit: 'onSubmit'\n        //'change input#_wpnonce': 'onNonceChange'\n    },\n\n    views: {},\n\n    initialize: function() {\n        // Init children views\n        this.createSubViews();\n    },\n\n    render: function() {\n        this.$el\n            .append(this.views.settings.$el);\n\n        return this;\n    },\n\n    createSubViews: function() {\n        this.views.settings = new adapter.view.Settings({\n            model: this.model\n        });\n\n        this.views.nonce = new adapter.view.Nonce({\n            model: this.model\n        });\n\n        this.views.postId = new adapter.view.PostId({\n            model: this.model\n        });\n    },\n\n    onSubmit: function() {\n        // Update settings input with actual model data for POST request.\n        Backbone.trigger('setka:editor:adapter:save');\n        this.views.settings.render();\n    }\n\n});\n","var\n    $ = jQuery;\n\nmodule.exports = Backbone.View.extend({\n\n    el: '#_wpnonce',\n\n    initialize: function() {\n        this.model.set('nonce', this.get());\n        _.bindAll(this, 'wpRefreshNonces');\n        $(document).on('heartbeat-tick.wp-refresh-nonces', this.wpRefreshNonces);\n    },\n\n    get: function() {\n        return this.$el.val();\n    },\n\n    wpRefreshNonces: function(event, data) {\n        var nonces = data['wp-refresh-post-nonces'];\n        if(nonces && nonces.replace[this.$el.attr('id')]) {\n            this.model.set('nonce', nonces.replace[this.$el.attr('id')]);\n        }\n    }\n\n});\n","\nmodule.exports = Backbone.View.extend({\n\n    el: '#post_ID',\n\n    initialize: function() {\n        this.model.set('postId', this.get());\n    },\n\n    get: function() {\n        return this.$el.val();\n    }\n\n});\n","var\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    tagName: 'input',\n\n    attributes: function() {\n        return {\n            type: 'hidden',\n            id:   translations.names.css + '-settings',\n            name: translations.names.css + '-settings',\n            val:  JSON.stringify(this.model.getDataForAutosave())\n        };\n    },\n\n    render: function() {\n        this.$el.val(\n            JSON.stringify(this.model.getDataForAutosave())\n        );\n        return this;\n    }\n\n});\n","\nmodule.exports = Backbone.View.extend({\n\n    statusClasses: {\n        success: 'notice-success',\n        warning: 'notice-warning',\n        error:   'notice-error',\n        info:    'notice-info'\n    },\n\n    removeAllStatuses: function() {\n        _.each(\n            this.statusClasses,\n            function(value, key, list) {\n                this.$el.removeClass(value);\n            },\n            this\n        );\n    },\n\n    setStatusSuccess: function() {\n        this.removeAllStatuses();\n        this.$el.addClass(this.statusClasses.success);\n    },\n\n    setStatusWarning: function() {\n        this.removeAllStatuses();\n        this.$el.addClass(this.statusClasses.warning);\n    },\n\n    setStatusError: function() {\n        this.removeAllStatuses();\n        this.$el.addClass(this.statusClasses.error);\n    },\n\n    setStatusInfo: function() {\n        this.removeAllStatuses();\n        this.$el.addClass(this.statusClasses.info);\n    }\n\n});\n","var\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    el: '#' + translations.names.css + '-notice-' + translations.names.css + '-cant-find-resources',\n\n    initialize: function() {\n        _.bindAll(this, 'requiredResourcesNotAvailable', 'requiredResourcesAvailable');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        Backbone.on('setka:editor:adapter:editors:setka:requiredResourcesNotAvailable', this.requiredResourcesNotAvailable);\n        Backbone.on('setka:editor:adapter:editors:setka:requiredResourcesAvailable', this.requiredResourcesAvailable);\n    },\n\n    requiredResourcesNotAvailable: function() {\n        this.show();\n    },\n\n    requiredResourcesAvailable: function() {\n        this.hide();\n    },\n\n    show: function() {\n        this.$el.removeClass('hidden');\n    },\n\n    hide: function() {\n        this.$el.addClass('hidden');\n    }\n});\n","var\n    adapter    = window.setkaEditorAdapter,\n    NoticePrototype = require('./Prototype');\n    //translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = NoticePrototype.extend({\n\n    //el: '#' + setkaEditorAdapterL10n.names.css + '-notice-' + 'setka-editor-save-snippet',\n\n    DOM: {},\n\n    initialize: function() {\n        _.bindAll(this, 'onDone', 'onFail');\n        //_.bindAll(this, 'onStart', 'onDone', 'onFail');\n        //this.setupDOM();\n        this.addEvents();\n    },\n\n    /*setupDOM: function() {\n        //this.DOM.save    = this.$el.find('#' + this.$el.attr('id') + '-save');\n        //this.DOM.error   = this.$el.find('#' + this.$el.attr('id') + '-error');\n        //this.DOM.success = this.$el.find('#' + this.$el.attr('id') + '-success');\n    },*/\n\n    addEvents: function() {\n        //Backbone.on('setka:editor:adapter:editors:setka:snippet:start', this.onStart);\n        Backbone.on('setka:editor:adapter:editors:setka:snippet:done', this.onDone);\n        Backbone.on('setka:editor:adapter:editors:setka:snippet:fail', this.onFail);\n    },\n\n    /*hideMessages: function() {\n        _.each(this.DOM, function(value, key, list){\n            value.addClass('hidden');\n        });\n    },*/\n\n    /*showMessage: function(message) {\n        message.removeClass('hidden');\n    },*/\n\n    /*show: function() {\n        this.$el.removeClass('hidden');\n    },*/\n\n    /*onStart: function() {\n        this.hideMessages();\n        this.setStatusInfo();\n        this.showMessage(this.DOM.save);\n        this.show();\n    },*/\n\n    onDone: function(snippet, response) {\n        //console.log(snippet, response);\n        //this.hideMessages();\n\n        // We have errors\n        if(_.has(response, 'errors') && !_.isEmpty(response.errors)) {\n            //this.setStatusError();\n            //this.showMessage(this.DOM.error);\n            var message = '';\n            _.each(response.errors, function(element, index, list) {\n                if(!_.isEmpty(message))\n                    message += '\\n';\n                message += element.message;\n            });\n            window.alert(message);\n        } // else { // no errors\n            //this.setStatusSuccess();\n            //this.showMessage(this.DOM.success);\n        //}\n\n        //this.show();\n    },\n\n    onFail: function(snippet, jqXHR, textStatus, errorThrown) {\n        window.alert(translations.view.notices.setkaEditorSaveSnippet.cantConnectToWordPress);\n        //console.log(snippet, jqXHR, textStatus, errorThrown);\n        //this.hideMessages();\n        //this.setStatusError();\n        //this.showMessage(this.DOM.error);\n        //this.show();\n\n        /**\n         * Possible issues:\n         *  Webserver not running.\n         *  Connection timeout (WordPress is so slow)\n         *  WordPress fails with PHP fatal error.\n         */\n    }\n\n});\n","var\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    el: '#' + translations.names.css + '-notice-' + translations.names.css + '-theme-disabled',\n\n    initialize: function() {\n        _.bindAll(this, 'themeDisabled', 'themeEnabled');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        Backbone.on('setka:editor:adapter:editors:setka:themeDisabled', this.themeDisabled);\n        Backbone.on('setka:editor:adapter:editors:setka:themeEnabled', this.themeEnabled);\n    },\n\n    themeDisabled: function() {\n        this.show();\n    },\n\n     themeEnabled: function() {\n        this.hide();\n    },\n\n    show: function() {\n        this.$el.removeClass('hidden');\n    },\n\n    hide: function() {\n        this.$el.addClass('hidden');\n    }\n});\n","var\n    $ = jQuery,\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    initialize: function() {\n        _.bindAll(this, 'onDefaultTabClick');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        Backbone.on('setka:editor:adapter:defaultTabClick', this.onDefaultTabClick);\n    },\n\n    removeEvents: function() {\n        Backbone.off('setka:editor:adapter:defaultTabClick', this.onDefaultTabClick);\n    },\n\n    onDefaultTabClick: function(event) {\n        $(translations.pointers.disabledEditorTabs.target) // or we can use event.target\n            .pointer(translations.pointers.disabledEditorTabs.options)\n            .pointer('open');\n    }\n\n});\n","var\n    adapter = window.setkaEditorAdapter,\n    translations = setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    el: '#poststuff',\n\n    views: {}, DOM: {},\n\n    classes: {\n        collapsed: translations.names.css + '-poststuff-container-1-collapsed'\n    },\n\n    initialize: function() {\n        _.bindAll(this, 'collapse', 'unCollapse');\n        this.createSubViews();\n    },\n\n    createSubViews: function() {\n        // Post Body\n        this.views.postBody = new adapter.view.postStuff.postBody.PostBody({\n            model: this.model\n        });\n    },\n\n    collapse: function() {\n        this.$el.addClass(this.classes.collapsed);\n        Backbone.trigger('setka:editor:adapter:poststuff:collapsed');\n    },\n\n    unCollapse: function() {\n        this.$el.removeClass(this.classes.collapsed);\n        Backbone.trigger('setka:editor:adapter:poststuff:unCollapsed');\n    }\n\n});\n","var\n    $ = jQuery;\n\nmodule.exports = Backbone.View.extend({\n\n    el: '#post-body',\n\n    DOM: {},\n\n    initialize: function() {\n        // Load current number of cols\n        this.model.set('postBoxesColumns', this.getCols());\n\n        _.bindAll(this, 'onPostBoxesColumnChange');\n\n        this.setupDOM();\n        this.addEvents();\n    },\n\n    setupDOM: function() {\n        this.DOM.document = $(document);\n    },\n\n    addEvents: function() {\n        // Fired when user switch number of columns on Screen Options WP tab.\n        // This event triggered in /wp-admin/js/postbox.js:208\n        this.DOM.document\n            .on('postboxes-columnchange', this.onPostBoxesColumnChange);\n    },\n\n    getCols: function() {\n        var col_1, col_2;\n        col_1 = this.$el.hasClass('columns-1');\n        col_2 = this.$el.hasClass('columns-2');\n\n        return ( col_2 && !col_1 ) ? 2 : 1;\n    },\n\n    onPostBoxesColumnChange: function() {\n        this.model.set('postBoxesColumns', this.getCols());\n    }\n\n});\n","\nmodule.exports = Backbone.View.extend({\n\n    el: '#adv-settings .editor-expand',\n\n    initialize: function() {\n        _.bindAll(this, 'onLaunch', 'onStop');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        Backbone.on('setka:editor:adapter:editors:setka:launch', this.onLaunch);\n        Backbone.on('setka:editor:adapter:editors:setka:stop', this.onStop);\n    },\n\n    removeEvents: function() {\n        Backbone.off('setka:editor:adapter:editors:setka:launch', this.onLaunch);\n        Backbone.off('setka:editor:adapter:editors:setka:stop', this.onStop);\n    },\n\n    onLaunch: function() {\n        this.hide();\n    },\n\n    onStop: function() {\n        this.show();\n    },\n\n    hide: function() {\n        this.$el.hide();\n    },\n\n    show: function() {\n        this.$el.show();\n    }\n\n});\n","var\n    translations = window.setkaEditorAdapterL10n;\n\nmodule.exports = Backbone.View.extend({\n\n    tagName: 'script',\n\n    attributes: {\n        type: 'text/javascript',\n        async: 'async'\n    },\n\n    initialize: function() {\n        _.bindAll(this, 'onLoad');\n        this.addEvents();\n    },\n\n    addEvents: function() {\n        this.model.on('change:id', this.update);\n    },\n\n    getSrc: function() {\n        return '//use.typekit.net/' + this.model.get('id') + '.js';\n    },\n\n    getId: function() {\n        return translations.names.css + '-type-kit-script-' + this.model.get('id');\n    },\n\n    render: function() {\n        this.$el\n            .attr('id',  this.getId())\n            .attr('src', this.getSrc());\n\n        // We using plain JS here because jQuery's .append()\n        // not triggering load event.\n        document.head.appendChild(this.el);\n        this.el.addEventListener('load', this.onLoad);\n    },\n\n    onLoad: function() {\n        try {\n            Typekit.load({\n                async: true\n            });\n        } catch(e) {}\n    }\n});\n"]}