{"ast":null,"code":"import _classCallCheck from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\src\\\\components\\\\UploadBackground.js\";\nimport React, { Component } from 'react';\nimport Cropper from 'react-easy-crop';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport Slider from 'material-ui/Slider/Slider.js';\nimport './css/UploadBackground.css';\nvar lol = window.location.origin + '/img/photos/photo_2018-12-20_16-23-55.jpg';\n\nvar UploadBackground =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadBackground, _Component);\n\n  function UploadBackground() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadBackground);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadBackground)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: lol,\n      crop: {\n        x: 0,\n        y: 0\n      },\n      zoom: 1,\n      aspect: 10 / 3\n    };\n\n    _this.onCropChange = function (crop) {\n      _this.setState({\n        crop: crop\n      });\n    };\n\n    _this.onCropComplete = function (croppedArea, croppedAreaPixels) {\n      console.log(croppedArea, croppedAreaPixels);\n    };\n\n    _this.onZoomChange = function (zoom) {\n      _this.setState({\n        zoom: zoom\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadBackground, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, this.props.uplBg ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"upload-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"close\",\n        onClick: this.props.toggleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Cropper, {\n        image: this.state.image,\n        crop: this.state.crop,\n        zoom: this.state.zoom,\n        aspect: this.state.aspect,\n        onCropChange: this.onCropChange,\n        onCropComplete: this.onCropComplete,\n        onZoomChange: this.onZoomChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"upload-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        value: this.state.zoom,\n        min: 1,\n        max: 3,\n        step: 0.1,\n        \"aria-labelledby\": \"Zoom\",\n        onChange: function onChange(e, zoom) {\n          return _this2.onZoomChange(zoom);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"black-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })) : '');\n    }\n  }]);\n\n  return UploadBackground;\n}(Component);\n\nexport default UploadBackground;","map":{"version":3,"sources":["C:\\OpenServer\\domains\\akvatory.local\\frontend\\src\\components\\UploadBackground.js"],"names":["React","Component","Cropper","MuiThemeProvider","Slider","lol","window","location","origin","UploadBackground","state","image","crop","x","y","zoom","aspect","onCropChange","setState","onCropComplete","croppedArea","croppedAreaPixels","console","log","onZoomChange","props","uplBg","toggleUpload","e"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAO,4BAAP;AAEA,IAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,2CAAnC;;IACMC,gB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAEN,GADD;AAENO,MAAAA,IAAI,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAFA;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,MAAM,EAAE,KAAK;AAJP,K;;UAORC,Y,GAAe,UAAAL,IAAI,EAAI;AACrB,YAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,K;;UAEDO,c,GAAiB,UAACC,WAAD,EAAcC,iBAAd,EAAoC;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBC,iBAAzB;AACD,K;;UAEDG,Y,GAAe,UAAAT,IAAI,EAAI;AACrB,YAAKG,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,0CACG,KAAKU,KAAL,CAAWC,KAAX,GAAmB,0CAClB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,KADpB;AAEE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAFnB;AAGE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWK,IAHnB;AAIE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAJrB;AAKE,QAAA,YAAY,EAAE,KAAKC,YALrB;AAME,QAAA,cAAc,EAAE,KAAKE,cANvB;AAOE,QAAA,YAAY,EAAE,KAAKK,YAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAWE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWK,IADpB;AAEE,QAAA,GAAG,EAAE,CAFP;AAGE,QAAA,GAAG,EAAE,CAHP;AAIE,QAAA,IAAI,EAAE,GAJR;AAKE,2BAAgB,MALlB;AAME,QAAA,QAAQ,EAAE,kBAACa,CAAD,EAAIb,IAAJ;AAAA,iBAAa,MAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAb;AAAA,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,CAXF,CADF,CADkB,EA2BlB;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BkB,CAAnB,GA4BK,EA7BR,CADF;AAiCD;;;;EAtD4Bd,S;;AAyD/B,eAAeQ,gBAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Cropper from 'react-easy-crop';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport Slider from 'material-ui/Slider/Slider.js'\r\nimport './css/UploadBackground.css';\r\n\r\nvar lol = window.location.origin + '/img/photos/photo_2018-12-20_16-23-55.jpg';\r\nclass UploadBackground extends Component {\r\n  state = {\r\n    image: lol,\r\n    crop: { x: 0, y: 0 },\r\n    zoom: 1,\r\n    aspect: 10 / 3,\r\n  }\r\n\r\n  onCropChange = crop => {\r\n    this.setState({ crop })\r\n  }\r\n \r\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\r\n    console.log(croppedArea, croppedAreaPixels)\r\n  }\r\n \r\n  onZoomChange = zoom => {\r\n    this.setState({ zoom })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.uplBg ? <>\r\n          <div className='upload-wrapper'>\r\n            <div className=\"upload-content\">\r\n              <a href=\"#\" className=\"close\" onClick={this.props.toggleUpload}></a>\r\n              <Cropper\r\n                image={this.state.image}\r\n                crop={this.state.crop}\r\n                zoom={this.state.zoom}\r\n                aspect={this.state.aspect}\r\n                onCropChange={this.onCropChange}\r\n                onCropComplete={this.onCropComplete}\r\n                onZoomChange={this.onZoomChange}\r\n              />\r\n              <div className=\"upload-controls\">\r\n              <MuiThemeProvider>\r\n                <Slider\r\n                  value={this.state.zoom}\r\n                  min={1}\r\n                  max={3}\r\n                  step={0.1}\r\n                  aria-labelledby=\"Zoom\"\r\n                  onChange={(e, zoom) => this.onZoomChange(zoom)}\r\n                />\r\n              </MuiThemeProvider> \r\n              </div>\r\n            </div> \r\n          </div>\r\n          <div className=\"black-wrapper\"></div>\r\n        </> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UploadBackground;"]},"metadata":{},"sourceType":"module"}