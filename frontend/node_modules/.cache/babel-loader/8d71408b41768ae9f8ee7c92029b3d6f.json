{"ast":null,"code":"import _classCallCheck from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\src\\\\components\\\\DropZone.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Dropzone from 'react-dropzone';\n\nvar DropZone =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropZone, _React$Component);\n\n  function DropZone() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropZone);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropZone)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {// Do something with files\n    };\n\n    return _this;\n  }\n\n  _createClass(DropZone, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: classNames('dropzone', {\n            'dropzone--isActive': isDragActive\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        })), isDragActive ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Drop files here...\") : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Try dropping some files here, or click to select files to upload.\"));\n      });\n    }\n  }]);\n\n  return DropZone;\n}(React.Component);\n\nexport default DropZone;","map":{"version":3,"sources":["C:\\OpenServer\\domains\\akvatory.local\\frontend\\src\\components\\DropZone.js"],"names":["React","Component","classNames","Dropzone","DropZone","onDrop","acceptedFiles","rejectedFiles","getRootProps","getInputProps","isDragActive"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,Q;;;;;;;;;;;;;;;;;;UACHC,M,GAAS,UAACC,aAAD,EAAgBC,aAAhB,EAAkC,CACzC;AACD,K;;;;;;;6BAEQ;AACR,aACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKF,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAAiD;AAAA,YAA/CG,YAA+C,QAA/CA,YAA+C;AAAA,YAAjCC,aAAiC,QAAjCA,aAAiC;AAAA,YAAlBC,YAAkB,QAAlBA,YAAkB;AAChD,eACE,6CACMF,YAAY,EADlB;AAEE,UAAA,SAAS,EAAEN,UAAU,CAAC,UAAD,EAAa;AAAC,kCAAsBQ;AAAvB,WAAb,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIE,+CAAWD,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAMIC,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADU,GAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EARN,CADF;AAaD,OAfH,CADF;AAmBD;;;;EAzBoBV,KAAK,CAACC,S;;AA4B7B,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport classNames from 'classnames'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nclass DropZone extends React.Component {\r\n   onDrop = (acceptedFiles, rejectedFiles) => {\r\n     // Do something with files\r\n   }\r\n\r\n   render() {\r\n    return (\r\n      <Dropzone onDrop={this.onDrop}>\r\n        {({getRootProps, getInputProps, isDragActive}) => {\r\n          return (\r\n            <div\r\n              {...getRootProps()}\r\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive})}\r\n            >\r\n              <input {...getInputProps()} />\r\n              {\r\n                isDragActive ?\r\n                  <p>Drop files here...</p> :\r\n                  <p>Try dropping some files here, or click to select files to upload.</p>\r\n              }\r\n            </div>\r\n          )\r\n        }}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropZone;"]},"metadata":{},"sourceType":"module"}