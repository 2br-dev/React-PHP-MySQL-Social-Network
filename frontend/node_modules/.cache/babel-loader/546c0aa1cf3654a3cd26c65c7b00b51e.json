{"ast":null,"code":"import _defineProperty from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\OpenServer\\\\domains\\\\akvatory.local\\\\frontend\\\\src\\\\components\\\\SignupForm.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nvar SignupForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignupForm, _Component);\n\n  function SignupForm(props) {\n    var _this;\n\n    _classCallCheck(this, SignupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignupForm).call(this, props));\n    _this.state = {\n      login: '',\n      password: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // динамически обрабатываем изменения полей\n\n\n  _createClass(SignupForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      // ставим стейт исходя из именя поля и вводимого значения\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n\n      if (this.state.login !== '' && this.state.password !== '') {\n        var formData = new FormData();\n        formData.append('login', $('input[name=\"login\"]').val());\n        formData.append('password', $('input[name=\"password\"]').val());\n        $.ajax({\n          url: '/ajax/signup',\n          data: formData,\n          processData: false,\n          contentType: false,\n          type: 'POST',\n          success: function success(res) {\n            console.log(res);\n            var response = JSON.parse(res).result;\n            response === 1 ? alert('успех!') : alert('fail!');\n          },\n          error: function error(err) {\n            alert('fail!' + err.code);\n          }\n        });\n      } else {\n        alert('пожалуйста, заполните все поля корректно!');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"register\",\n        action: \"\",\n        method: \"POST\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"\\u041B\\u043E\\u0433\\u0438\\u043D \\u0438\\u043B\\u0438 email\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"login\",\n        name: \"login\",\n        type: \"text\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), this.state.password.length < 8 && this.state.password !== '' ? React.createElement(\"p\", {\n        className: \"invalid-form-result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\") : ''), React.createElement(\"button\", {\n        className: \"btn btn-success btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")));\n    }\n  }]);\n\n  return SignupForm;\n}(Component);\n\nexport default SignupForm;","map":{"version":3,"sources":["C:\\OpenServer\\domains\\akvatory.local\\frontend\\src\\components\\SignupForm.js"],"names":["React","Component","$","SignupForm","props","state","login","password","handleChange","bind","handleSubmit","event","setState","target","name","value","e","preventDefault","formData","FormData","append","val","ajax","url","data","processData","contentType","type","success","res","console","log","response","JSON","parse","result","alert","error","err","code","username","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass SignupForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: '',\r\n      password: '',\r\n    }\r\n    this.handleChange      =   this.handleChange.bind(this);\r\n    this.handleSubmit      =   this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // динамически обрабатываем изменения полей\r\n  handleChange(event) {\r\n    // ставим стейт исходя из именя поля и вводимого значения\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault(); \r\n\r\n    if (this.state.login !== '' && this.state.password !== '') {\r\n      const formData = new FormData();\r\n        \r\n      formData.append('login',    $('input[name=\"login\"]').val());\r\n      formData.append('password', $('input[name=\"password\"]').val());\r\n\r\n      $.ajax({\r\n        url         : '/ajax/signup',\r\n        data        : formData,\r\n        processData : false,\r\n        contentType : false,\r\n        type: 'POST',\r\n        success: function(res) {\r\n          console.log(res);\r\n          let response = (JSON.parse(res)).result;\r\n          response === 1 ? alert('успех!') : alert('fail!');\r\n        },\r\n        error: function(err) {\r\n          alert('fail!' + err.code);\r\n        }\r\n      });\r\n\r\n    } else {\r\n      alert('пожалуйста, заполните все поля корректно!');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form id=\"register\" action=\"\" method=\"POST\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"login\">Логин или email</label><br />\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"login\"\r\n              name=\"login\"\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n              required\r\n            />    \r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Пароль</label><br />\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n             {this.state.password.length < 8 && this.state.password !== '' ? <p className=\"invalid-form-result\">Пароль должен быть не менее 8 символов</p> : ''}\r\n          </div>\r\n\r\n          <button className=\"btn btn-success btn-block\">Войти</button>\r\n\r\n        </form>  \r\n      </div>  \r\n    )\r\n  }\r\n}\r\n\r\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}