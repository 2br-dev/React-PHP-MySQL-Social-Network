{"version":3,"sources":["components/Header.js","components/MainpageHeader.js","components/MainPage.js","App.js","serviceWorker.js","components/SignupForm.js","components/RegisterForm.js","components/BgBubbles.js","components/LoginForm.js","index.js"],"names":["Header","date","Date","react_default","a","createElement","className","dist_default","element","format","id","toLocaleString","weekday","Component","MainpageHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","href","MainPage","components_Header","components_MainpageHeader","App","components_MainPage","Boolean","window","location","hostname","match","SignupForm","login","password","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","defineProperty","target","name","value","e","preventDefault","formData","FormData","append","$","val","ajax","url","data","processData","contentType","type","success","res","console","log","JSON","parse","result","alert","error","err","code","action","method","onSubmit","htmlFor","username","onChange","required","length","RegisterForm","email","phone","isEmailValid","validateEmail","test","BgBubbles","LoginForm","whichForm","changeForm","onClick","components_RegisterForm","components_SignupForm","components_BgBubbles","pathname","ReactDOM","render","components_LoginForm","document","getElementById","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.929075f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport './css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    return (\r\n      <div className=\"absolute-header\">\r\n        <div className=\"header-team\">#ЕдинаяКоманда</div>\r\n        <div className=\"header-container\">\r\n          <div className=\"header-date\">\r\n            <span>сегодня</span>\r\n            <Moment element=\"span\" format=\"DD.MM.YYYY\">{date}</Moment>\r\n            <span id=\"header-date-day\">{date.toLocaleString('ru', {weekday: 'short'})}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport './css/MainpageHeader.css';\r\n\r\nclass MainpageHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"person\">\r\n          <div className=\"person-image\"></div>\r\n          <div className=\"person-info\">\r\n            <div className=\"person-info__container\">\r\n              <p className=\"person-info__name\">Sergey 037</p>\r\n              <p className=\"person-info__position\">Machine Learning</p>\r\n            </div>\r\n            <a href=\"logout.php\"><button className=\"btn person-logout\">Выйти</button></a>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn upload-cover\">Загрузить обложку</button>\r\n      </header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MainpageHeader;","import React, {Component} from 'react';\r\nimport Header from './Header';\r\nimport MainpageHeader from './MainpageHeader';\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <MainpageHeader />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import React, {Component} from 'react';\nimport MainPage from './components/MainPage';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass SignupForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: '',\r\n      password: '',\r\n    }\r\n    this.handleChange      =   this.handleChange.bind(this);\r\n    this.handleSubmit      =   this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // динамически обрабатываем изменения полей\r\n  handleChange(event) {\r\n    // ставим стейт исходя из именя поля и вводимого значения\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault(); \r\n\r\n    if (this.state.login !== '' && this.state.password !== '') {\r\n      const formData = new FormData();\r\n        \r\n      formData.append('login',    $('input[name=\"login\"]').val());\r\n      formData.append('password', $('input[name=\"password\"]').val());\r\n\r\n      $.ajax({\r\n        url         : '/ajax/signup',\r\n        data        : formData,\r\n        processData : false,\r\n        contentType : false,\r\n        type: 'POST',\r\n        success: function(res) {\r\n          console.log(res);\r\n          let response = (JSON.parse(res)).result;\r\n          response === 1 ? alert('успех!') : alert('fail!');\r\n          window.location.href = '/';\r\n        },\r\n        error: function(err) {\r\n          alert('fail!' + err.code);\r\n        }\r\n      });\r\n\r\n    } else {\r\n      alert('пожалуйста, заполните все поля корректно!');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form id=\"register\" action=\"\" method=\"POST\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"login\">Логин или email</label><br />\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"login\"\r\n              name=\"login\"\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n              required\r\n            />    \r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Пароль</label><br />\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n             {this.state.password.length < 8 && this.state.password !== '' ? <p className=\"invalid-form-result\">Пароль должен быть не менее 8 символов</p> : ''}\r\n          </div>\r\n\r\n          <button className=\"btn\">Войти</button>\r\n\r\n        </form>  \r\n      </div>  \r\n    )\r\n  }\r\n}\r\n\r\nexport default SignupForm;","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass RegisterForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      login: '',\r\n      password: '',\r\n      phone: '',\r\n      username: '',\r\n      isEmailValid: '',\r\n    };\r\n    this.handleChange      =   this.handleChange.bind(this);\r\n    this.validateEmail     =   this.validateEmail.bind(this);\r\n    this.handleSubmit      =   this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // динамически обрабатываем изменения полей\r\n  handleChange(event) {\r\n    // ставим стейт исходя из именя поля и вводимого значения\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n    // если вводится е-мэйл то прогоняем через функцию\r\n    if ([event.target.name] == 'email') {\r\n      this.validateEmail(event.target.value);\r\n      // если вводимое значение пустое - то убираем подсказку \r\n      if (event.target.value == '') {\r\n        this.setState({ isEmailValid: '' });\r\n      }\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const regExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    regExp.test(email) ? this.setState({isEmailValid: true}) : this.setState({isEmailValid: false}); \r\n  }\r\n  \r\n  handleSubmit(e) {\r\n    e.preventDefault(); \r\n\r\n    if (this.state.username !== '' && this.state.login !== '' && this.state.isEmailValid && this.state.username !== '' && this.state.phone !== '' && this.state.password !== '') {\r\n      const formData = new FormData();\r\n        \r\n      formData.append('login',    $('input[name=\"login\"]').val());\r\n      formData.append('password', $('input[name=\"password\"]').val());\r\n      formData.append('email',    $('input[name=\"email\"]').val());\r\n      formData.append('username', $('input[name=\"username\"]').val());\r\n      formData.append('phone',    $('input[name=\"phone\"]').val());\r\n\r\n      $.ajax({\r\n        url         : '/ajax/registration',\r\n        data        : formData,\r\n        processData : false,\r\n        contentType : false,\r\n        type: 'POST',        \r\n        success: function(res) {\r\n          let response = (JSON.parse(res)).result;\r\n          response === 1 ? alert('успех!') : alert('fail!');\r\n          window.location.href = '/';\r\n        },\r\n        error: function(err) {\r\n          alert('fail!' + err.code);\r\n        }\r\n      });\r\n    } else {\r\n      alert('пожалуйста, заполните все поля корректно!');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form id=\"register\" action=\"\" method=\"POST\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Имя и фамилия</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n              required\r\n            />    \r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Пароль</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n             {this.state.password.length < 8 && this.state.password !== '' ? <p className=\"invalid-form-result\">Пароль должен быть не менее 8 символов</p> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Электронная почта</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          {!this.state.isEmailValid && this.state.isEmailValid !== '' ? <p className=\"invalid-form-result\">Пожалуйста, введите настоящий email адрес</p> : ''} \r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"login\">Логин</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"login\"\r\n              name=\"login\"\r\n              type=\"text\"\r\n              value={this.state.login}\r\n              onChange={this.handleChange}\r\n              required\r\n            />    \r\n          </div>\r\n      \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Номер телефона</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              type=\"text\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              required\r\n            />    \r\n          </div>\r\n\r\n          <button className=\"btn btn-success btn-block\">Зарегистрироваться</button>           \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport './css/BgBubbles.css';\r\n\r\nconst BgBubbles = () => {\r\n  return (\r\n    <ul className=\"bg-bubbles\">\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default BgBubbles;","import React, { Component } from 'react';\nimport SignupForm from './SignupForm';\nimport RegisterForm from './RegisterForm';\nimport Header from './Header';\nimport BgBubbles from './BgBubbles';\nimport './css/LoginForms.css';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      whichForm: false,\n    }\n    this.changeForm = this.changeForm.bind(this);\n  }\n\n  changeForm() {\n    this.setState({whichForm: !this.state.whichForm});\n  }\n\n  render() {\n    return (\n      <div className=\"login-screen\">\n        <Header />\n        <div className=\"login-screen-container\">\n          <p className=\"login-screen-greetings\">Здравствуйте</p>  \n          <div className=\"login-button-container\">\n            <button className={this.state.whichForm ? 'login-screen-button login-screen-button-enabled' : 'login-screen-button'} onClick={this.changeForm}>Войти</button>\n            <button className={this.state.whichForm ? 'login-screen-button' : 'login-screen-button login-screen-button-enabled'} onClick={this.changeForm}>Зарегистрироваться</button>\n          </div>              \n          {this.state.whichForm ? <RegisterForm /> : <SignupForm />}                        \n        </div>\n        <BgBubbles /> \n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport LoginForm from './components/LoginForm';\n\n\nif (window.location.pathname == '/login') {\n  ReactDOM.render(<LoginForm />, document.getElementById('login'));\n} else {\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}